{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dappTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dappToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUserSingleTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Jerry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Jerry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/Jerry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "3": "C:/Users/Jerry/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "4": "contracts/TokenFarm.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenFarm.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        664
      ],
      "Context": [
        685
      ],
      "IERC20": [
        618
      ],
      "Ownable": [
        540
      ],
      "TokenFarm": [
        436
      ]
    },
    "id": 437,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "C:/Users/Jerry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 541,
        "src": "57:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Jerry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 619,
        "src": "110:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Jerry/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 665,
        "src": "167:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 540,
              "src": "411:7:4"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "411:7:4"
          }
        ],
        "canonicalName": "TokenFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          540,
          685
        ],
        "name": "TokenFarm",
        "nameLocation": "398:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 9,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "473:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "456:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "456:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 8,
              "nodeType": "ArrayTypeName",
              "src": "456:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 12,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "593:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "576:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "576:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 11,
              "nodeType": "ArrayTypeName",
              "src": "576:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 18,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "737:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "682:69:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "690:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "682:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 16,
                "keyType": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "709:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "701:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b83e0234",
            "id": 22,
            "mutability": "mutable",
            "name": "uniqueTokensStaked",
            "nameLocation": "868:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "833:53:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "841:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "833:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 20,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "852:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27927b3e",
            "id": 26,
            "mutability": "mutable",
            "name": "tokenPriceFeedMapping",
            "nameLocation": "992:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "957:56:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "965:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "957:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "976:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5eb186f8",
            "id": 29,
            "mutability": "mutable",
            "name": "dappToken",
            "nameLocation": "1033:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1019:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$618",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 618,
                "src": "1019:6:4"
              },
              "referencedDeclaration": 618,
              "src": "1019:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$618",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "1095:88:4",
              "statements": [
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1139:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$618",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36,
                          "name": "_dappTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1158:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 35,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "1151:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$618_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1151:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$618",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1139:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$618",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:37:4"
                }
              ]
            },
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_dappTokenAddress",
                  "nameLocation": "1069:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1061:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1060:27:4"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1095:0:4"
            },
            "scope": 436,
            "src": "1049:134:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "1292:59:4",
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50,
                        "name": "tokenPriceFeedMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1302:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "id": 51,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1324:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1302:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1334:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1302:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:42:4"
                }
              ]
            },
            "functionSelector": "877dd39d",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 483,
                  "src": "1278:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1278:9:4"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "1198:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1227:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1219:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "1243:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1235:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:36:4"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1292:0:4"
            },
            "scope": 436,
            "src": "1189:162:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1585:951:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1603:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1613:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1603:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265206d6f7265207468616e2030",
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1616:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c8935a62694df0f55eb616b304d0939d629638a210986a1a26cdc7bcc6a439a",
                          "typeString": "literal_string \"Amount must be more than 0\""
                        },
                        "value": "Amount must be more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c8935a62694df0f55eb616b304d0939d629638a210986a1a26cdc7bcc6a439a",
                          "typeString": "literal_string \"Amount must be more than 0\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1595:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1595:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1595:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "1678:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "1663:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1663:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e2069732063757272656e746c79206e6f7420616c6c6f776564",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1687:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9839a5b7a688f7dba11d938e3ee2c761594c231708547d5dff65bd317ad5a36",
                          "typeString": "literal_string \"Token is currently not allowed\""
                        },
                        "value": "Token is currently not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9839a5b7a688f7dba11d938e3ee2c761594c231708547d5dff65bd317ad5a36",
                          "typeString": "literal_string \"Token is currently not allowed\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1655:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 83,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2091:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2091:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 87,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2111:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$436",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$436",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2103:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2103:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2103:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "2118:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 80,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "2070:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 79,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "2063:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$618_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2063:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$618",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 599,
                      "src": "2063:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2161:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2161:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 95,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "2173:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92,
                      "name": "updateUniqueTokensStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2136:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:44:4"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 98,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "2190:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 102,
                        "indexExpression": {
                          "id": 99,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "2205:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2190:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "expression": {
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2213:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2213:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2190:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 104,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2239:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 106,
                          "indexExpression": {
                            "id": 105,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "2254:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2239:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 109,
                        "indexExpression": {
                          "expression": {
                            "id": 107,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2262:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2262:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2239:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 110,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "2288:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2239:56:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2190:105:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:105:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 114,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2444:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 117,
                      "indexExpression": {
                        "expression": {
                          "id": 115,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2463:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2463:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2444:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2478:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2444:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 128,
                  "nodeType": "IfStatement",
                  "src": "2440:90:4",
                  "trueBody": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "2481:49:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 123,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2508:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2508:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 120,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "2495:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2495:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2495:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "2495:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 58,
              "nodeType": "StructuredDocumentation",
              "src": "1357:162:4",
              "text": "Function 1 - Stakes tokens sent in by users.\n_amount - amount of tokens to stake\n_token - the address of the ERC-20 token being staked"
            },
            "functionSelector": "0bea440d",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "1533:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1553:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1545:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1570:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1562:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1562:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1544:33:4"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:0:4"
            },
            "scope": 436,
            "src": "1524:1012:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "2800:138:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 138,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "2814:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 140,
                        "indexExpression": {
                          "id": 139,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2829:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2814:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "id": 141,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2837:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2814:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2847:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2814:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "IfStatement",
                  "src": "2810:122:4",
                  "trueBody": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2850:82:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 145,
                              "name": "uniqueTokensStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "2864:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 147,
                            "indexExpression": {
                              "id": 146,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "2883:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2864:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 148,
                                "name": "uniqueTokensStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "2892:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 150,
                              "indexExpression": {
                                "id": 149,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "2911:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2892:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2920:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2892:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2864:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "2864:57:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 131,
              "nodeType": "StructuredDocumentation",
              "src": "2542:179:4",
              "text": "Util function to update how many unique tokens a user is staking.\n_user - the address of the user staking\n_token - the address of the token being staked"
            },
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUniqueTokensStaked",
            "nameLocation": "2735:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2768:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2760:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2783:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2775:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2775:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2759:31:4"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2800:0:4"
            },
            "scope": 436,
            "src": "2726:212:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "3115:350:4",
              "statements": [
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3133:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 210,
                      "src": "3125:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3125:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 172,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 166,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "3143:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 168,
                      "indexExpression": {
                        "id": 167,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3158:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3143:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 171,
                    "indexExpression": {
                      "expression": {
                        "id": 169,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3166:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3166:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3143:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3125:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 174,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "3195:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3205:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3195:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e672062616c616e63652063616e6e6f7420626520302e",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3208:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_992be1abfe112d7229896923bb131e510bec20fc2368de54df9bcc07d3d20bd4",
                          "typeString": "literal_string \"Staking balance cannot be 0.\""
                        },
                        "value": "Staking balance cannot be 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_992be1abfe112d7229896923bb131e510bec20fc2368de54df9bcc07d3d20bd4",
                          "typeString": "literal_string \"Staking balance cannot be 0.\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3187:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3187:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3187:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3273:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3273:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 186,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "3285:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 181,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "3256:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 180,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "3249:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$618_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3249:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$618",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 567,
                      "src": "3249:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3249:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "3249:44:4"
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 189,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "3303:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 193,
                        "indexExpression": {
                          "id": 190,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "3318:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3303:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 194,
                      "indexExpression": {
                        "expression": {
                          "id": 191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3326:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3326:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3303:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3340:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3303:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:38:4"
                },
                {
                  "expression": {
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 198,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3391:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 201,
                      "indexExpression": {
                        "expression": {
                          "id": 199,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3410:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3410:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3391:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 202,
                          "name": "uniqueTokensStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "3424:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 205,
                        "indexExpression": {
                          "expression": {
                            "id": 203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3443:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3443:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3424:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3457:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3424:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3391:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:67:4"
                }
              ]
            },
            "documentation": {
              "id": 159,
              "nodeType": "StructuredDocumentation",
              "src": "2944:120:4",
              "text": "Function 2 - Unstakes tokens sent in by users.\n_token - the address of the ERC-20 token being staked"
            },
            "functionSelector": "2d1ad8b8",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nameLocation": "3078:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3100:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "3092:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3092:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3091:16:4"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3115:0:4"
            },
            "scope": 436,
            "src": "3069:396:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "3606:427:4",
              "statements": [
                {
                  "body": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "3661:366:4",
                    "statements": [
                      {
                        "assignments": [
                          229
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 229,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "3683:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 247,
                            "src": "3675:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 228,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3675:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 233,
                        "initialValue": {
                          "baseExpression": {
                            "id": 230,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "3695:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 232,
                          "indexExpression": {
                            "id": 231,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "3703:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3695:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3675:30:4"
                      },
                      {
                        "assignments": [
                          235
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 235,
                            "mutability": "mutable",
                            "name": "userTotalValue",
                            "nameLocation": "3801:14:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 247,
                            "src": "3793:22:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 234,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3793:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 239,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 237,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "3836:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 236,
                            "name": "getUserTotalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "3818:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3818:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3793:53:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 243,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "3990:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 244,
                              "name": "userTotalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "4001:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 240,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "3971:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$618",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 567,
                            "src": "3971:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3971:45:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 246,
                        "nodeType": "ExpressionStatement",
                        "src": "3971:45:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 221,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "3636:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 222,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3640:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3640:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3636:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "initializationExpression": {
                    "assignments": [
                      218
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3629:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "3621:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3621:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 220,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3633:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3621:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3656:3:4",
                      "subExpression": {
                        "id": 225,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "3656:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 227,
                    "nodeType": "ExpressionStatement",
                    "src": "3656:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3616:411:4"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "3471:90:4",
              "text": "Function 3 - Issues tokens to all stakers based on the value of tokens staked."
            },
            "functionSelector": "60ab5852",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 215,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 483,
                  "src": "3596:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3596:9:4"
              }
            ],
            "name": "issueTokens",
            "nameLocation": "3575:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3586:2:4"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3606:0:4"
            },
            "scope": 436,
            "src": "3566:467:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4306:326:4",
              "statements": [
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "4324:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "4316:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 258,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4316:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 261,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4337:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4316:22:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 263,
                            "name": "uniqueTokensStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "4356:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 265,
                          "indexExpression": {
                            "id": 264,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "4375:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4356:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4384:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4356:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e73207374616b656421",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4387:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ec31d8ae8770dda9a6e1b5a8a4927170ea106fd5150cf2d954bbe9bf567f633",
                          "typeString": "literal_string \"No tokens staked!\""
                        },
                        "value": "No tokens staked!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ec31d8ae8770dda9a6e1b5a8a4927170ea106fd5150cf2d954bbe9bf567f633",
                          "typeString": "literal_string \"No tokens staked!\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4348:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4348:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "4348:59:4"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "4468:131:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 282,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "4482:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 283,
                              "name": "totalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "4511:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 285,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 253,
                                  "src": "4564:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 286,
                                    "name": "allowedTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9,
                                    "src": "4571:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 288,
                                  "indexExpression": {
                                    "id": 287,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 272,
                                    "src": "4585:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4571:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 284,
                                "name": "getUserSingleTokenValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 341,
                                "src": "4540:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view returns (uint256)"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4540:48:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4511:77:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4482:106:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 292,
                        "nodeType": "ExpressionStatement",
                        "src": "4482:106:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 275,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "4437:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 276,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "4441:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4441:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4437:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 294,
                  "initializationExpression": {
                    "assignments": [
                      272
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4430:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "4422:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4422:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 274,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4434:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4422:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4463:3:4",
                      "subExpression": {
                        "id": 279,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "4463:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 281,
                    "nodeType": "ExpressionStatement",
                    "src": "4463:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "4417:182:4"
                },
                {
                  "expression": {
                    "id": 295,
                    "name": "totalValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 259,
                    "src": "4615:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 257,
                  "id": 296,
                  "nodeType": "Return",
                  "src": "4608:17:4"
                }
              ]
            },
            "documentation": {
              "id": 251,
              "nodeType": "StructuredDocumentation",
              "src": "4039:190:4",
              "text": "Util function that grabs the value of all unique tokens the user has staked.\n_user - the address of the user staking\n_token - the address of the token being staked"
            },
            "functionSelector": "af3f5e22",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalValue",
            "nameLocation": "4243:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4269:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4261:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4260:15:4"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4297:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4297:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4296:9:4"
            },
            "scope": 436,
            "src": "4234:398:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "4954:336:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 308,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "4968:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 310,
                      "indexExpression": {
                        "id": 309,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "4987:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4968:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4997:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4968:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 316,
                  "nodeType": "IfStatement",
                  "src": "4964:69:4",
                  "trueBody": {
                    "id": 315,
                    "nodeType": "Block",
                    "src": "5000:33:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5021:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 307,
                        "id": 314,
                        "nodeType": "Return",
                        "src": "5014:8:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    318,
                    320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "5052:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "5044:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5044:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "5067:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "5059:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5059:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 322,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "5093:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 321,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "5079:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5079:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5043:57:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 325,
                                    "name": "stakingBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18,
                                    "src": "5227:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 327,
                                  "indexExpression": {
                                    "id": 326,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "5242:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5227:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 329,
                                "indexExpression": {
                                  "id": 328,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 301,
                                  "src": "5250:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5227:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 330,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 318,
                                "src": "5259:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5227:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 332,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5226:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5269:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 334,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "5273:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5269:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 336,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5268:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5226:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 338,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5225:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 307,
                  "id": 339,
                  "nodeType": "Return",
                  "src": "5218:65:4"
                }
              ]
            },
            "documentation": {
              "id": 299,
              "nodeType": "StructuredDocumentation",
              "src": "4638:189:4",
              "text": "Util function that grabs the value of one unique token the user has staked.\n_user - the address of the user staking\n_token - the address of the token being staked"
            },
            "functionSelector": "276b11da",
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleTokenValue",
            "nameLocation": "4841:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4873:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "4865:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4865:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4888:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "4880:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4880:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4864:31:4"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "4941:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4941:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4940:9:4"
            },
            "scope": 436,
            "src": "4832:458:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "5543:371:4",
              "statements": [
                {
                  "assignments": [
                    352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "5591:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5583:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5583:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "baseExpression": {
                      "id": 353,
                      "name": "tokenPriceFeedMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "5610:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 355,
                    "indexExpression": {
                      "id": 354,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "5632:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5610:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5583:56:4"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "5671:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5649:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 358,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 357,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 664,
                          "src": "5649:21:4"
                        },
                        "referencedDeclaration": 664,
                        "src": "5649:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 363,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 361,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "5718:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 360,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "5683:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$664_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5683:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5649:95:4"
                },
                {
                  "assignments": [
                    null,
                    365,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "5765:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5758:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5758:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 366,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "5780:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "5780:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5780:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5755:52:4"
                },
                {
                  "assignments": [
                    371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 371,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "5823:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5817:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5817:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 375,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 372,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "5834:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 625,
                      "src": "5834:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5834:20:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5817:37:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 378,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "5881:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5873:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 376,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5873:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5873:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 382,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "5897:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5889:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 380,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5889:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5889:17:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 384,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5872:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 350,
                  "id": 385,
                  "nodeType": "Return",
                  "src": "5865:42:4"
                }
              ]
            },
            "documentation": {
              "id": 342,
              "nodeType": "StructuredDocumentation",
              "src": "5296:136:4",
              "text": "Util function that grabs the value of one unique token from Chainlink.\n_token - the address of the token being staked"
            },
            "functionSelector": "f1c5d6c2",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nameLocation": "5446:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5468:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5460:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5460:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5459:16:4"
            },
            "returnParameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5521:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5521:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5530:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5530:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5520:18:4"
            },
            "scope": 436,
            "src": "5437:477:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "6155:43:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 398,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "6184:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 395,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6165:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6165:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6165:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "6165:26:4"
                }
              ]
            },
            "documentation": {
              "id": 388,
              "nodeType": "StructuredDocumentation",
              "src": "5920:171:4",
              "text": "Util function that only the owner can use. onlyOwner is from OpenZeppelin's Ownable.sol contract.\n_token - the address of the ERC-20 token being staked "
            },
            "functionSelector": "171e44ea",
            "id": 402,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 393,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 392,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 483,
                  "src": "6145:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6145:9:4"
              }
            ],
            "name": "addAllowedTokens",
            "nameLocation": "6105:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6130:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 402,
                  "src": "6122:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6122:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6121:16:4"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6155:0:4"
            },
            "scope": 436,
            "src": "6096:102:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "6478:189:4",
              "statements": [
                {
                  "body": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "6539:100:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 421,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "6557:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 423,
                            "indexExpression": {
                              "id": 422,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 411,
                              "src": "6571:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6557:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 424,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "6577:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6557:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 429,
                        "nodeType": "IfStatement",
                        "src": "6553:76:4",
                        "trueBody": {
                          "id": 428,
                          "nodeType": "Block",
                          "src": "6585:44:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6610:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 409,
                              "id": 427,
                              "nodeType": "Return",
                              "src": "6603:11:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 414,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "6508:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 415,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6512:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6512:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6508:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 431,
                  "initializationExpression": {
                    "assignments": [
                      411
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 411,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6501:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "6493:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 410,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6493:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 413,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6505:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6493:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6534:3:4",
                      "subExpression": {
                        "id": 418,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "6534:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 420,
                    "nodeType": "ExpressionStatement",
                    "src": "6534:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "6488:151:4"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6655:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 409,
                  "id": 433,
                  "nodeType": "Return",
                  "src": "6648:12:4"
                }
              ]
            },
            "documentation": {
              "id": 403,
              "nodeType": "StructuredDocumentation",
              "src": "6204:207:4",
              "text": "Function 4 - Checks if token is allowed to be staked.\n_token - the address of the ERC-20 token being staked\nreturn: Whether or not that token is allowed to be staked in this Dapp."
            },
            "functionSelector": "dd5b8467",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "6425:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6448:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "6440:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6440:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6439:16:4"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "6472:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6472:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6471:6:4"
            },
            "scope": 436,
            "src": "6416:251:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 437,
        "src": "389:6280:4",
        "usedErrors": []
      }
    ],
    "src": "32:6638:4"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161108b38038061108b83398101604081905261002f916100ad565b6100383361005d565b600680546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610f9f806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b83e023411610071578063b83e023414610255578063dd5b846714610275578063f1c5d6c214610298578063f2fde38b146102c0578063fd5e6dd1146102d357600080fd5b8063715018a614610216578063877dd39d1461021e5780638da5cb5b14610231578063af3f5e221461024257600080fd5b806329161a00116100e957806329161a00146101aa5780632d1ad8b8146101d55780635e5f2e26146101e85780635eb186f8146101fb57806360ab58521461020e57600080fd5b80630bea440d1461011b578063171e44ea14610130578063276b11da1461014357806327927b3e14610169575b600080fd5b61012e610129366004610c4d565b6102e6565b005b61012e61013e366004610c79565b6104bd565b610156610151366004610c9b565b610538565b6040519081526020015b60405180910390f35b610192610177366004610c79565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610160565b6101566101b8366004610c9b565b600360209081526000928352604080842090915290825290205481565b61012e6101e3366004610c79565b6105bf565b6101926101f6366004610cc5565b6106f0565b600654610192906001600160a01b031681565b61012e61071a565b61012e610817565b61012e61022c366004610c9b565b61084d565b6000546001600160a01b0316610192565b610156610250366004610c79565b6108a5565b610156610263366004610c79565b60046020526000908152604090205481565b610288610283366004610c79565b610963565b6040519015158152602001610160565b6102ab6102a6366004610c79565b6109cd565b60408051928352602083019190915201610160565b61012e6102ce366004610c79565b610ace565b6101926102e1366004610cc5565b610b66565b6000821161033b5760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206d757374206265206d6f7265207468616e203000000000000060448201526064015b60405180910390fd5b61034481610963565b6103905760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e2069732063757272656e746c79206e6f7420616c6c6f77656400006044820152606401610332565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610cde565b506104123382610b76565b6001600160a01b0381166000908152600360209081526040808320338452909152902054610441908390610d16565b6001600160a01b0382166000908152600360209081526040808320338452825280832093909355600490522054600114156104b957600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b031916331790555b5050565b6000546001600160a01b031633146104e75760405162461bcd60e51b815260040161033290610d2e565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526004602052604081205461055d575060006105b9565b600080610569846109cd565b909250905061057981600a610e47565b6001600160a01b038086166000908152600360209081526040808320938a16835292905220546105aa908490610e53565b6105b49190610e72565b925050505b92915050565b6001600160a01b0381166000908152600360209081526040808320338452909152902054806106305760405162461bcd60e51b815260206004820152601c60248201527f5374616b696e672062616c616e63652063616e6e6f7420626520302e000000006044820152606401610332565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a19190610cde565b506001600160a01b0382166000908152600360209081526040808320338452825280832083905560049091529020546106dc90600190610e94565b336000908152600460205260409020555050565b6001818154811061070057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146107445760405162461bcd60e51b815260040161033290610d2e565b60005b6002548110156108145760006002828154811061076657610766610eab565b60009182526020822001546001600160a01b03169150610785826108a5565b60065460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190610cde565b505050808061080c90610ec1565b915050610747565b50565b6000546001600160a01b031633146108415760405162461bcd60e51b815260040161033290610d2e565b61084b6000610be1565b565b6000546001600160a01b031633146108775760405162461bcd60e51b815260040161033290610d2e565b6001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6001600160a01b03811660009081526004602052604081205481906109005760405162461bcd60e51b81526020600482015260116024820152704e6f20746f6b656e73207374616b65642160781b6044820152606401610332565b60005b60015481101561095c5761093e846001838154811061092457610924610eab565b6000918252602090912001546001600160a01b0316610538565b6109489083610d16565b91508061095481610ec1565b915050610903565b5092915050565b6000805b6001548110156109c457826001600160a01b03166001828154811061098e5761098e610eab565b6000918252602090912001546001600160a01b031614156109b25750600192915050565b806109bc81610ec1565b915050610967565b50600092915050565b6001600160a01b03808216600090815260056020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a529190610ef6565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abc9190610f46565b919760ff909216965090945050505050565b6000546001600160a01b03163314610af85760405162461bcd60e51b815260040161033290610d2e565b6001600160a01b038116610b5d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610332565b61081481610be1565b6002818154811061070057600080fd5b6001600160a01b038082166000908152600360209081526040808320938616835292905220546104b9576001600160a01b038216600090815260046020526040902054610bc4906001610d16565b6001600160a01b0383166000908152600460205260409020555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c4857600080fd5b919050565b60008060408385031215610c6057600080fd5b82359150610c7060208401610c31565b90509250929050565b600060208284031215610c8b57600080fd5b610c9482610c31565b9392505050565b60008060408385031215610cae57600080fd5b610cb783610c31565b9150610c7060208401610c31565b600060208284031215610cd757600080fd5b5035919050565b600060208284031215610cf057600080fd5b81518015158114610c9457600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610d2957610d29610d00565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181815b80851115610d9e578160001904821115610d8457610d84610d00565b80851615610d9157918102915b93841c9390800290610d68565b509250929050565b600082610db5575060016105b9565b81610dc2575060006105b9565b8160018114610dd85760028114610de257610dfe565b60019150506105b9565b60ff841115610df357610df3610d00565b50506001821b6105b9565b5060208310610133831016604e8410600b8410161715610e21575081810a6105b9565b610e2b8383610d63565b8060001904821115610e3f57610e3f610d00565b029392505050565b6000610c948383610da6565b6000816000190483118215151615610e6d57610e6d610d00565b500290565b600082610e8f57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610ea657610ea6610d00565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ed557610ed5610d00565b5060010190565b805169ffffffffffffffffffff81168114610c4857600080fd5b600080600080600060a08688031215610f0e57600080fd5b610f1786610edc565b9450602086015193506040860151925060608601519150610f3a60808701610edc565b90509295509295909350565b600060208284031215610f5857600080fd5b815160ff81168114610c9457600080fdfea2646970667358221220387a488db5649009fbf70ae2652bb1ed2c12bfbcdec0a643c7cb53d41755f2b564736f6c634300080b0033",
  "bytecodeSha1": "4afe42a45d84ddf4e379331dd55ee971d0f40c3c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "TokenFarm",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "37": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "TokenFarm.stakeTokens": {
          "32": [
            1603,
            1614,
            true
          ],
          "33": [
            1663,
            1685,
            true
          ],
          "34": [
            2444,
            2479,
            false
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "36": [
            6557,
            6583,
            false
          ]
        },
        "TokenFarm.unstakeTokens": {
          "35": [
            3195,
            3206,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "30": [
            2131,
            2148
          ],
          "31": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "17": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "27": [
            1926,
            1999
          ],
          "28": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "7": [
            658,
            675
          ]
        }
      },
      "3": {},
      "4": {
        "TokenFarm.addAllowedTokens": {
          "8": [
            6165,
            6191
          ]
        },
        "TokenFarm.getTokenValue": {
          "26": [
            5865,
            5907
          ]
        },
        "TokenFarm.getUserSingleTokenValue": {
          "9": [
            5014,
            5022
          ],
          "10": [
            5218,
            5283
          ]
        },
        "TokenFarm.getUserTotalValue": {
          "19": [
            4348,
            4407
          ],
          "20": [
            4482,
            4588
          ],
          "21": [
            4463,
            4466
          ],
          "22": [
            4608,
            4625
          ]
        },
        "TokenFarm.issueTokens": {
          "15": [
            3971,
            4016
          ],
          "16": [
            3656,
            3659
          ]
        },
        "TokenFarm.setPriceFeedContract": {
          "18": [
            1302,
            1344
          ]
        },
        "TokenFarm.stakeTokens": {
          "1": [
            1595,
            1645
          ],
          "2": [
            1655,
            1720
          ],
          "3": [
            2063,
            2126
          ],
          "4": [
            2136,
            2180
          ],
          "5": [
            2190,
            2295
          ],
          "6": [
            2495,
            2519
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "23": [
            6603,
            6614
          ],
          "24": [
            6534,
            6537
          ],
          "25": [
            6648,
            6660
          ]
        },
        "TokenFarm.unstakeTokens": {
          "11": [
            3187,
            3239
          ],
          "12": [
            3249,
            3293
          ],
          "13": [
            3303,
            3341
          ],
          "14": [
            3391,
            3458
          ]
        },
        "TokenFarm.updateUniqueTokensStaked": {
          "29": [
            2864,
            2921
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b83e023411610071578063b83e023414610255578063dd5b846714610275578063f1c5d6c214610298578063f2fde38b146102c0578063fd5e6dd1146102d357600080fd5b8063715018a614610216578063877dd39d1461021e5780638da5cb5b14610231578063af3f5e221461024257600080fd5b806329161a00116100e957806329161a00146101aa5780632d1ad8b8146101d55780635e5f2e26146101e85780635eb186f8146101fb57806360ab58521461020e57600080fd5b80630bea440d1461011b578063171e44ea14610130578063276b11da1461014357806327927b3e14610169575b600080fd5b61012e610129366004610c4d565b6102e6565b005b61012e61013e366004610c79565b6104bd565b610156610151366004610c9b565b610538565b6040519081526020015b60405180910390f35b610192610177366004610c79565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610160565b6101566101b8366004610c9b565b600360209081526000928352604080842090915290825290205481565b61012e6101e3366004610c79565b6105bf565b6101926101f6366004610cc5565b6106f0565b600654610192906001600160a01b031681565b61012e61071a565b61012e610817565b61012e61022c366004610c9b565b61084d565b6000546001600160a01b0316610192565b610156610250366004610c79565b6108a5565b610156610263366004610c79565b60046020526000908152604090205481565b610288610283366004610c79565b610963565b6040519015158152602001610160565b6102ab6102a6366004610c79565b6109cd565b60408051928352602083019190915201610160565b61012e6102ce366004610c79565b610ace565b6101926102e1366004610cc5565b610b66565b6000821161033b5760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206d757374206265206d6f7265207468616e203000000000000060448201526064015b60405180910390fd5b61034481610963565b6103905760405162461bcd60e51b815260206004820152601e60248201527f546f6b656e2069732063757272656e746c79206e6f7420616c6c6f77656400006044820152606401610332565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610cde565b506104123382610b76565b6001600160a01b0381166000908152600360209081526040808320338452909152902054610441908390610d16565b6001600160a01b0382166000908152600360209081526040808320338452825280832093909355600490522054600114156104b957600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b031916331790555b5050565b6000546001600160a01b031633146104e75760405162461bcd60e51b815260040161033290610d2e565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526004602052604081205461055d575060006105b9565b600080610569846109cd565b909250905061057981600a610e47565b6001600160a01b038086166000908152600360209081526040808320938a16835292905220546105aa908490610e53565b6105b49190610e72565b925050505b92915050565b6001600160a01b0381166000908152600360209081526040808320338452909152902054806106305760405162461bcd60e51b815260206004820152601c60248201527f5374616b696e672062616c616e63652063616e6e6f7420626520302e000000006044820152606401610332565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a19190610cde565b506001600160a01b0382166000908152600360209081526040808320338452825280832083905560049091529020546106dc90600190610e94565b336000908152600460205260409020555050565b6001818154811061070057600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146107445760405162461bcd60e51b815260040161033290610d2e565b60005b6002548110156108145760006002828154811061076657610766610eab565b60009182526020822001546001600160a01b03169150610785826108a5565b60065460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190610cde565b505050808061080c90610ec1565b915050610747565b50565b6000546001600160a01b031633146108415760405162461bcd60e51b815260040161033290610d2e565b61084b6000610be1565b565b6000546001600160a01b031633146108775760405162461bcd60e51b815260040161033290610d2e565b6001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6001600160a01b03811660009081526004602052604081205481906109005760405162461bcd60e51b81526020600482015260116024820152704e6f20746f6b656e73207374616b65642160781b6044820152606401610332565b60005b60015481101561095c5761093e846001838154811061092457610924610eab565b6000918252602090912001546001600160a01b0316610538565b6109489083610d16565b91508061095481610ec1565b915050610903565b5092915050565b6000805b6001548110156109c457826001600160a01b03166001828154811061098e5761098e610eab565b6000918252602090912001546001600160a01b031614156109b25750600192915050565b806109bc81610ec1565b915050610967565b50600092915050565b6001600160a01b03808216600090815260056020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a529190610ef6565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abc9190610f46565b919760ff909216965090945050505050565b6000546001600160a01b03163314610af85760405162461bcd60e51b815260040161033290610d2e565b6001600160a01b038116610b5d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610332565b61081481610be1565b6002818154811061070057600080fd5b6001600160a01b038082166000908152600360209081526040808320938616835292905220546104b9576001600160a01b038216600090815260046020526040902054610bc4906001610d16565b6001600160a01b0383166000908152600460205260409020555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c4857600080fd5b919050565b60008060408385031215610c6057600080fd5b82359150610c7060208401610c31565b90509250929050565b600060208284031215610c8b57600080fd5b610c9482610c31565b9392505050565b60008060408385031215610cae57600080fd5b610cb783610c31565b9150610c7060208401610c31565b600060208284031215610cd757600080fd5b5035919050565b600060208284031215610cf057600080fd5b81518015158114610c9457600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610d2957610d29610d00565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181815b80851115610d9e578160001904821115610d8457610d84610d00565b80851615610d9157918102915b93841c9390800290610d68565b509250929050565b600082610db5575060016105b9565b81610dc2575060006105b9565b8160018114610dd85760028114610de257610dfe565b60019150506105b9565b60ff841115610df357610df3610d00565b50506001821b6105b9565b5060208310610133831016604e8410600b8410161715610e21575081810a6105b9565b610e2b8383610d63565b8060001904821115610e3f57610e3f610d00565b029392505050565b6000610c948383610da6565b6000816000190483118215151615610e6d57610e6d610d00565b500290565b600082610e8f57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610ea657610ea6610d00565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ed557610ed5610d00565b5060010190565b805169ffffffffffffffffffff81168114610c4857600080fd5b600080600080600060a08688031215610f0e57600080fd5b610f1786610edc565b9450602086015193506040860151925060608601519150610f3a60808701610edc565b90509295509295909350565b600060208284031215610f5857600080fd5b815160ff81168114610c9457600080fdfea2646970667358221220387a488db5649009fbf70ae2652bb1ed2c12bfbcdec0a643c7cb53d41755f2b564736f6c634300080b0033",
  "deployedSourceMap": "389:6280:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:1012;;;;;;:::i;:::-;;:::i;:::-;;6096:102;;;;;;:::i;:::-;;:::i;4832:458::-;;;;;;:::i;:::-;;:::i;:::-;;;1053:25:5;;;1041:2;1026:18;4832:458:4;;;;;;;;957:56;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;957:56:4;;;;;;-1:-1:-1;;;;;1253:32:5;;;1235:51;;1223:2;1208:18;957:56:4;1089:203:5;682:69:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3069:396;;;;;;:::i;:::-;;:::i;456:30::-;;;;;;:::i;:::-;;:::i;1019:23::-;;;;;-1:-1:-1;;;;;1019:23:4;;;3566:467;;;:::i;1605:92:0:-;;;:::i;1189:162:4:-;;;;;;:::i;:::-;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;4234:398:4;;;;;;:::i;:::-;;:::i;833:53::-;;;;;;:::i;:::-;;;;;;;;;;;;;;6416:251;;;;;;:::i;:::-;;:::i;:::-;;;1869:14:5;;1862:22;1844:41;;1832:2;1817:18;6416:251:4;1704:187:5;5437:477:4;;;;;;:::i;:::-;;:::i;:::-;;;;2070:25:5;;;2126:2;2111:18;;2104:34;;;;2043:18;5437:477:4;1896:248:5;1846:189:0;;;;;;:::i;:::-;;:::i;576:24:4:-;;;;;;:::i;:::-;;:::i;1524:1012::-;1613:1;1603:7;:11;1595:50;;;;-1:-1:-1;;;1595:50:4;;2351:2:5;1595:50:4;;;2333:21:5;2390:2;2370:18;;;2363:30;2429:28;2409:18;;;2402:56;2475:18;;1595:50:4;;;;;;;;;1663:22;1678:6;1663:14;:22::i;:::-;1655:65;;;;-1:-1:-1;;;1655:65:4;;2706:2:5;1655:65:4;;;2688:21:5;2745:2;2725:18;;;2718:30;2784:32;2764:18;;;2757:60;2834:18;;1655:65:4;2504:354:5;1655:65:4;2063:63;;-1:-1:-1;;;2063:63:4;;2091:10;2063:63;;;3103:34:5;2111:4:4;3153:18:5;;;3146:43;3205:18;;;3198:34;;;-1:-1:-1;;;;;2063:27:4;;;;;3038:18:5;;2063:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2136:44;2161:10;2173:6;2136:24;:44::i;:::-;-1:-1:-1;;;;;2239:22:4;;;;;;:14;:22;;;;;;;;2262:10;2239:34;;;;;;;;:56;;2288:7;;2239:56;:::i;:::-;-1:-1:-1;;;;;2190:22:4;;;;;;:14;:22;;;;;;;;2213:10;2190:34;;;;;;;:105;;;;2444:18;:30;;;;2478:1;2444:35;2440:90;;;2495:7;:24;;;;;;;-1:-1:-1;2495:24:4;;;;;;;;-1:-1:-1;;;;;;2495:24:4;2508:10;2495:24;;;2440:90;1524:1012;;:::o;6096:102::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;6165:13:4::1;:26:::0;;;;::::1;::::0;;-1:-1:-1;6165:26:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;6165:26:4::1;-1:-1:-1::0;;;;;6165:26:4;;;::::1;::::0;;;::::1;::::0;;6096:102::o;4832:458::-;-1:-1:-1;;;;;4968:25:4;;4941:7;4968:25;;;:18;:25;;;;;;4964:69;;-1:-1:-1;5021:1:4;5014:8;;4964:69;5044:13;5059:16;5079:21;5093:6;5079:13;:21::i;:::-;5043:57;;-1:-1:-1;5043:57:4;-1:-1:-1;5269:12:4;5043:57;5269:2;:12;:::i;:::-;-1:-1:-1;;;;;5227:22:4;;;;;;;:14;:22;;;;;;;;:29;;;;;;;;;;:37;;5259:5;;5227:37;:::i;:::-;5226:56;;;;:::i;:::-;5218:65;;;;4832:458;;;;;:::o;3069:396::-;-1:-1:-1;;;;;3143:22:4;;3125:15;3143:22;;;:14;:22;;;;;;;;3166:10;3143:34;;;;;;;;3195:11;3187:52;;;;-1:-1:-1;;;3187:52:4;;6122:2:5;3187:52:4;;;6104:21:5;6161:2;6141:18;;;6134:30;6200;6180:18;;;6173:58;6248:18;;3187:52:4;5920:352:5;3187:52:4;3249:44;;-1:-1:-1;;;3249:44:4;;3273:10;3249:44;;;6451:51:5;6518:18;;;6511:34;;;-1:-1:-1;;;;;3249:23:4;;;;;6424:18:5;;3249:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3303:22:4;;3340:1;3303:22;;;:14;:22;;;;;;;;3326:10;3303:34;;;;;;;:38;;;3424:18;:30;;;;;;:34;;3457:1;;3424:34;:::i;:::-;3410:10;3391:30;;;;:18;:30;;;;;:67;-1:-1:-1;;3069:396:4:o;456:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;456:30:4;;-1:-1:-1;456:30:4;:::o;3566:467::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3621:9:4::1;3616:411;3640:7;:14:::0;3636:18;::::1;3616:411;;;3675:17;3695:7;3703:1;3695:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3695:10:4::1;::::0;-1:-1:-1;3818:28:4::1;3695:10:::0;3818:17:::1;:28::i;:::-;3971:9;::::0;:45:::1;::::0;-1:-1:-1;;;3971:45:4;;-1:-1:-1;;;;;6469:32:5;;;3971:45:4::1;::::0;::::1;6451:51:5::0;6518:18;;;6511:34;;;3793:53:4;;-1:-1:-1;3971:9:4;::::1;::::0;:18:::1;::::0;6424::5;;3971:45:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3661:366;;3656:3;;;;;:::i;:::-;;;;3616:411;;;;3566:467::o:0;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1189:162:4:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1302:29:4;;::::1;;::::0;;;:21:::1;:29;::::0;;;;:42;;-1:-1:-1;;;;;;1302:42:4::1;::::0;;;::::1;;::::0;;1189:162::o;4234:398::-;-1:-1:-1;;;;;4356:25:4;;4297:7;4356:25;;;:18;:25;;;;;;4297:7;;4348:59;;;;-1:-1:-1;;;4348:59:4;;7160:2:5;4348:59:4;;;7142:21:5;7199:2;7179:18;;;7172:30;-1:-1:-1;;;7218:18:5;;;7211:47;7275:18;;4348:59:4;6958:341:5;4348:59:4;4422:9;4417:182;4441:13;:20;4437:24;;4417:182;;;4540:48;4564:5;4571:13;4585:1;4571:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4571:16:4;4540:23;:48::i;:::-;4511:77;;:10;:77;:::i;:::-;4482:106;-1:-1:-1;4463:3:4;;;;:::i;:::-;;;;4417:182;;;-1:-1:-1;4615:10:4;4234:398;-1:-1:-1;;4234:398:4:o;6416:251::-;6472:4;;6488:151;6512:13;:20;6508:24;;6488:151;;;6577:6;-1:-1:-1;;;;;6557:26:4;:13;6571:1;6557:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6557:16:4;:26;6553:76;;;-1:-1:-1;6610:4:4;;6416:251;-1:-1:-1;;6416:251:4:o;6553:76::-;6534:3;;;;:::i;:::-;;;;6488:151;;;-1:-1:-1;6655:5:4;;6416:251;-1:-1:-1;;6416:251:4:o;5437:477::-;-1:-1:-1;;;;;5610:29:4;;;5521:7;5610:29;;;:21;:29;;;;;;;5780:27;;-1:-1:-1;;;5780:27:4;;;;5521:7;;;;5610:29;;;;;5521:7;;5610:29;;5780:25;;:27;;;;;;;;;;;;;;;5610:29;5780:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5755:52;;;;;;5817:14;5834:9;-1:-1:-1;;;;;5834:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5881:5;;5889:17;;;;;-1:-1:-1;5437:477:4;;-1:-1:-1;;;;;5437:477:4:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;8446:2:5;1926:73:0::1;::::0;::::1;8428:21:5::0;8485:2;8465:18;;;8458:30;8524:34;8504:18;;;8497:62;-1:-1:-1;;;8575:18:5;;;8568:36;8621:19;;1926:73:0::1;8244:402:5::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;576:24:4:-:0;;;;;;;;;;;;2726:212;-1:-1:-1;;;;;2814:22:4;;;2847:1;2814:22;;;:14;:22;;;;;;;;:29;;;;;;;;;;2810:122;;-1:-1:-1;;;;;2892:25:4;;;;;;:18;:25;;;;;;:29;;2920:1;2892:29;:::i;:::-;-1:-1:-1;;;;;2864:25:4;;;;;;:18;:25;;;;;:57;2726:212;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:5:o;642:260::-;710:6;718;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;810:29;829:9;810:29;:::i;:::-;800:39;;858:38;892:2;881:9;877:18;858:38;:::i;1297:180::-;1356:6;1409:2;1397:9;1388:7;1384:23;1380:32;1377:52;;;1425:1;1422;1415:12;1377:52;-1:-1:-1;1448:23:5;;1297:180;-1:-1:-1;1297:180:5:o;3243:277::-;3310:6;3363:2;3351:9;3342:7;3338:23;3334:32;3331:52;;;3379:1;3376;3369:12;3331:52;3411:9;3405:16;3464:5;3457:13;3450:21;3443:5;3440:32;3430:60;;3486:1;3483;3476:12;3525:127;3586:10;3581:3;3577:20;3574:1;3567:31;3617:4;3614:1;3607:15;3641:4;3638:1;3631:15;3657:128;3697:3;3728:1;3724:6;3721:1;3718:13;3715:39;;;3734:18;;:::i;:::-;-1:-1:-1;3770:9:5;;3657:128::o;3790:356::-;3992:2;3974:21;;;4011:18;;;4004:30;4070:34;4065:2;4050:18;;4043:62;4137:2;4122:18;;3790:356::o;4151:422::-;4240:1;4283:5;4240:1;4297:270;4318:7;4308:8;4305:21;4297:270;;;4377:4;4373:1;4369:6;4365:17;4359:4;4356:27;4353:53;;;4386:18;;:::i;:::-;4436:7;4426:8;4422:22;4419:55;;;4456:16;;;;4419:55;4535:22;;;;4495:15;;;;4297:270;;;4301:3;4151:422;;;;;:::o;4578:806::-;4627:5;4657:8;4647:80;;-1:-1:-1;4698:1:5;4712:5;;4647:80;4746:4;4736:76;;-1:-1:-1;4783:1:5;4797:5;;4736:76;4828:4;4846:1;4841:59;;;;4914:1;4909:130;;;;4821:218;;4841:59;4871:1;4862:10;;4885:5;;;4909:130;4946:3;4936:8;4933:17;4930:43;;;4953:18;;:::i;:::-;-1:-1:-1;;5009:1:5;4995:16;;5024:5;;4821:218;;5123:2;5113:8;5110:16;5104:3;5098:4;5095:13;5091:36;5085:2;5075:8;5072:16;5067:2;5061:4;5058:12;5054:35;5051:77;5048:159;;;-1:-1:-1;5160:19:5;;;5192:5;;5048:159;5239:34;5264:8;5258:4;5239:34;:::i;:::-;5309:6;5305:1;5301:6;5297:19;5288:7;5285:32;5282:58;;;5320:18;;:::i;:::-;5358:20;;4578:806;-1:-1:-1;;;4578:806:5:o;5389:131::-;5449:5;5478:36;5505:8;5499:4;5478:36;:::i;5525:168::-;5565:7;5631:1;5627;5623:6;5619:14;5616:1;5613:21;5608:1;5601:9;5594:17;5590:45;5587:71;;;5638:18;;:::i;:::-;-1:-1:-1;5678:9:5;;5525:168::o;5698:217::-;5738:1;5764;5754:132;;5808:10;5803:3;5799:20;5796:1;5789:31;5843:4;5840:1;5833:15;5871:4;5868:1;5861:15;5754:132;-1:-1:-1;5900:9:5;;5698:217::o;6556:125::-;6596:4;6624:1;6621;6618:8;6615:34;;;6629:18;;:::i;:::-;-1:-1:-1;6666:9:5;;6556:125::o;6686:127::-;6747:10;6742:3;6738:20;6735:1;6728:31;6778:4;6775:1;6768:15;6802:4;6799:1;6792:15;6818:135;6857:3;-1:-1:-1;;6878:17:5;;6875:43;;;6898:18;;:::i;:::-;-1:-1:-1;6945:1:5;6934:13;;6818:135::o;7304:179::-;7382:13;;7435:22;7424:34;;7414:45;;7404:73;;7473:1;7470;7463:12;7488:473;7591:6;7599;7607;7615;7623;7676:3;7664:9;7655:7;7651:23;7647:33;7644:53;;;7693:1;7690;7683:12;7644:53;7716:39;7745:9;7716:39;:::i;:::-;7706:49;;7795:2;7784:9;7780:18;7774:25;7764:35;;7839:2;7828:9;7824:18;7818:25;7808:35;;7883:2;7872:9;7868:18;7862:25;7852:35;;7906:49;7950:3;7939:9;7935:19;7906:49;:::i;:::-;7896:59;;7488:473;;;;;;;;:::o;7966:273::-;8034:6;8087:2;8075:9;8066:7;8062:23;8058:32;8055:52;;;8103:1;8100;8093:12;8055:52;8135:9;8129:16;8185:4;8178:5;8174:16;8167:5;8164:27;8154:55;;8205:1;8202;8195:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addAllowedTokens(address)": {
        "notice": "Util function that only the owner can use. onlyOwner is from OpenZeppelin's Ownable.sol contract. _token - the address of the ERC-20 token being staked "
      },
      "getTokenValue(address)": {
        "notice": "Util function that grabs the value of one unique token from Chainlink. _token - the address of the token being staked"
      },
      "getUserSingleTokenValue(address,address)": {
        "notice": "Util function that grabs the value of one unique token the user has staked. _user - the address of the user staking _token - the address of the token being staked"
      },
      "getUserTotalValue(address)": {
        "notice": "Util function that grabs the value of all unique tokens the user has staked. _user - the address of the user staking _token - the address of the token being staked"
      },
      "issueTokens()": {
        "notice": "Function 3 - Issues tokens to all stakers based on the value of tokens staked."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stakeTokens(uint256,address)": {
        "notice": "Function 1 - Stakes tokens sent in by users. _amount - amount of tokens to stake _token - the address of the ERC-20 token being staked"
      },
      "tokenIsAllowed(address)": {
        "notice": "Function 4 - Checks if token is allowed to be staked. _token - the address of the ERC-20 token being staked return: Whether or not that token is allowed to be staked in this Dapp."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstakeTokens(address)": {
        "notice": "Function 2 - Unstakes tokens sent in by users. _token - the address of the ERC-20 token being staked"
      }
    },
    "version": 1
  },
  "offset": [
    389,
    6669
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB83E0234 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB83E0234 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29161A00 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x2D1AD8B8 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBEA440D EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x171E44EA EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x276B11DA EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x27927B3E EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x71A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x817 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x192 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206D6F7265207468616E2030000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2069732063757272656E746C79206E6F7420616C6C6F7765640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST POP PUSH2 0x412 CALLER DUP3 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x441 SWAP1 DUP4 SWAP1 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x55D JUMPI POP PUSH1 0x0 PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x569 DUP5 PUSH2 0x9CD JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x579 DUP2 PUSH1 0xA PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x5AA SWAP1 DUP5 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E672062616C616E63652063616E6E6F7420626520302E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x6DC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xE94 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x785 DUP3 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x80C SWAP1 PUSH2 0xEC1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x747 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x84B PUSH1 0x0 PUSH2 0xBE1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x900 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F20746F6B656E73207374616B656421 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x95C JUMPI PUSH2 0x93E DUP5 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x538 JUMP JUMPDEST PUSH2 0x948 SWAP1 DUP4 PUSH2 0xD16 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x954 DUP2 PUSH2 0xEC1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x903 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x9C4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98E JUMPI PUSH2 0x98E PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x9B2 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9BC DUP2 PUSH2 0xEC1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x967 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABC SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x814 DUP2 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBC4 SWAP1 PUSH1 0x1 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xC70 PUSH1 0x20 DUP5 ADD PUSH2 0xC31 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC94 DUP3 PUSH2 0xC31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB7 DUP4 PUSH2 0xC31 JUMP JUMPDEST SWAP2 POP PUSH2 0xC70 PUSH1 0x20 DUP5 ADD PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD29 PUSH2 0xD00 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xD9E JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD84 PUSH2 0xD00 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xD91 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xD68 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDB5 JUMPI POP PUSH1 0x1 PUSH2 0x5B9 JUMP JUMPDEST DUP2 PUSH2 0xDC2 JUMPI POP PUSH1 0x0 PUSH2 0x5B9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xDD8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xDE2 JUMPI PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xDF3 JUMPI PUSH2 0xDF3 PUSH2 0xD00 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x5B9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE21 JUMPI POP DUP2 DUP2 EXP PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0xE2B DUP4 DUP4 PUSH2 0xD63 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3F PUSH2 0xD00 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC94 DUP4 DUP4 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE6D JUMPI PUSH2 0xE6D PUSH2 0xD00 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xD00 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xED5 JUMPI PUSH2 0xED5 PUSH2 0xD00 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF17 DUP7 PUSH2 0xEDC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF3A PUSH1 0x80 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE PUSH27 0x488DB5649009FBF70AE2652BB1ED2C12BFBCDEC0A643C7CB53D417 SSTORE CALLCODE 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB83E0234"
    },
    "49": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB83E0234"
    },
    "60": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x255"
    },
    "64": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD5B8467"
    },
    "71": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x275"
    },
    "75": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF1C5D6C2"
    },
    "82": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x298"
    },
    "86": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C0"
    },
    "97": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFD5E6DD1"
    },
    "104": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D3"
    },
    "108": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x216"
    },
    "124": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x877DD39D"
    },
    "131": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21E"
    },
    "135": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x231"
    },
    "146": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAF3F5E22"
    },
    "153": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x242"
    },
    "157": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "161": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "REVERT",
      "path": "4"
    },
    "162": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "164": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x29161A00"
    },
    "169": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "GT",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x29161A00"
    },
    "180": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AA"
    },
    "184": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2D1AD8B8"
    },
    "191": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D5"
    },
    "195": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5E5F2E26"
    },
    "202": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E8"
    },
    "206": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5EB186F8"
    },
    "213": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FB"
    },
    "217": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x60AB5852"
    },
    "224": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20E"
    },
    "228": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "232": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "REVERT",
      "path": "4"
    },
    "233": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "234": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "235": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBEA440D"
    },
    "240": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "245": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "246": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x171E44EA"
    },
    "251": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x130"
    },
    "255": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "256": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "257": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x276B11DA"
    },
    "262": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x143"
    },
    "266": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27927B3E"
    },
    "273": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x169"
    },
    "277": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        389,
        6669
      ],
      "op": "REVERT",
      "path": "4"
    },
    "283": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "284": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "287": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x129"
    },
    "290": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "291": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "293": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC4D"
    },
    "296": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1524,
        2536
      ],
      "op": "JUMP",
      "path": "4"
    },
    "297": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "298": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E6"
    },
    "301": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1524,
        2536
      ],
      "op": "JUMP",
      "path": "4"
    },
    "302": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "303": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "STOP",
      "path": "4"
    },
    "304": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "305": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "308": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13E"
    },
    "311": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "312": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "314": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC79"
    },
    "317": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        6096,
        6198
      ],
      "op": "JUMP",
      "path": "4"
    },
    "318": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "319": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BD"
    },
    "322": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        6096,
        6198
      ],
      "op": "JUMP",
      "path": "4"
    },
    "323": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "324": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156"
    },
    "327": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x151"
    },
    "330": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "331": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "333": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC9B"
    },
    "336": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMP",
      "path": "4"
    },
    "337": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "338": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x538"
    },
    "341": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMP",
      "path": "4"
    },
    "342": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "343": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "345": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "346": {
      "op": "SWAP1"
    },
    "347": {
      "op": "DUP2"
    },
    "348": {
      "op": "MSTORE"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "353": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "355": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "356": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "DUP1",
      "path": "4"
    },
    "357": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "358": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "SUB",
      "path": "4"
    },
    "359": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "360": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "RETURN",
      "path": "4"
    },
    "361": {
      "offset": [
        957,
        1013
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "362": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "365": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x177"
    },
    "368": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "369": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "371": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC79"
    },
    "374": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        957,
        1013
      ],
      "op": "JUMP",
      "path": "4"
    },
    "375": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "376": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "378": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "380": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "381": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "383": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "384": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "DUP2",
      "path": "4"
    },
    "385": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "386": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "388": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "389": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "390": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "offset": [
        957,
        1013
      ],
      "op": "AND",
      "path": "4"
    },
    "400": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "DUP2",
      "path": "4"
    },
    "401": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "JUMP",
      "path": "4"
    },
    "402": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "403": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "405": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        957,
        1013
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "op": "SWAP1"
    },
    "415": {
      "op": "SWAP2"
    },
    "416": {
      "op": "AND"
    },
    "417": {
      "op": "DUP2"
    },
    "418": {
      "op": "MSTORE"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "offset": [
        957,
        1013
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "425": {
      "op": "JUMP"
    },
    "426": {
      "offset": [
        682,
        751
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "427": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156"
    },
    "430": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B8"
    },
    "433": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "434": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "436": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC9B"
    },
    "439": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        682,
        751
      ],
      "op": "JUMP",
      "path": "4"
    },
    "440": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "441": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "443": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "445": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "446": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "DUP2",
      "path": "4"
    },
    "447": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "448": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "450": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "451": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "DUP4",
      "path": "4"
    },
    "452": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "453": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "455": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "DUP1",
      "path": "4"
    },
    "456": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "DUP5",
      "path": "4"
    },
    "457": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "458": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "459": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "460": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "461": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "462": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "DUP3",
      "path": "4"
    },
    "463": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "464": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "465": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "466": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "467": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "DUP2",
      "path": "4"
    },
    "468": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        682,
        751
      ],
      "op": "JUMP",
      "path": "4"
    },
    "469": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "470": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "473": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E3"
    },
    "476": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "477": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "479": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC79"
    },
    "482": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        3069,
        3465
      ],
      "op": "JUMP",
      "path": "4"
    },
    "483": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "484": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5BF"
    },
    "487": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        3069,
        3465
      ],
      "op": "JUMP",
      "path": "4"
    },
    "488": {
      "offset": [
        456,
        486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "489": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "492": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F6"
    },
    "495": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "496": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "498": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC5"
    },
    "501": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        456,
        486
      ],
      "op": "JUMP",
      "path": "4"
    },
    "502": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "503": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F0"
    },
    "506": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        456,
        486
      ],
      "op": "JUMP",
      "path": "4"
    },
    "507": {
      "offset": [
        1019,
        1042
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "508": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        1019,
        1042
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "510": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        1019,
        1042
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "511": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        1019,
        1042
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "514": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        1019,
        1042
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "521": {
      "op": "SHL"
    },
    "522": {
      "op": "SUB"
    },
    "523": {
      "offset": [
        1019,
        1042
      ],
      "op": "AND",
      "path": "4"
    },
    "524": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        1019,
        1042
      ],
      "op": "DUP2",
      "path": "4"
    },
    "525": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        1019,
        1042
      ],
      "op": "JUMP",
      "path": "4"
    },
    "526": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3566,
        4033
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "527": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3566,
        4033
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "530": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3566,
        4033
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71A"
    },
    "533": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        3566,
        4033
      ],
      "op": "JUMP",
      "path": "4"
    },
    "534": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "535": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "538": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x817"
    },
    "541": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "542": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "543": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "546": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22C"
    },
    "549": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "550": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "552": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC9B"
    },
    "555": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        1189,
        1351
      ],
      "op": "JUMP",
      "path": "4"
    },
    "556": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "557": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x84D"
    },
    "560": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        1189,
        1351
      ],
      "op": "JUMP",
      "path": "4"
    },
    "561": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "562": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "564": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "op": "SUB"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "574": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x192"
    },
    "577": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "578": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "579": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156"
    },
    "582": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x250"
    },
    "585": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "586": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "588": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC79"
    },
    "591": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4234,
        4632
      ],
      "op": "JUMP",
      "path": "4"
    },
    "592": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "593": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A5"
    },
    "596": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4234,
        4632
      ],
      "op": "JUMP",
      "path": "4"
    },
    "597": {
      "offset": [
        833,
        886
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "598": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x156"
    },
    "601": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x263"
    },
    "604": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "605": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "607": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC79"
    },
    "610": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        833,
        886
      ],
      "op": "JUMP",
      "path": "4"
    },
    "611": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "612": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "614": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "616": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "617": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "619": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "620": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "621": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "622": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "624": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "625": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "626": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "627": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "628": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        833,
        886
      ],
      "op": "JUMP",
      "path": "4"
    },
    "629": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "630": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x288"
    },
    "633": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x283"
    },
    "636": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "637": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "639": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC79"
    },
    "642": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        6416,
        6667
      ],
      "op": "JUMP",
      "path": "4"
    },
    "643": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "644": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x963"
    },
    "647": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        6416,
        6667
      ],
      "op": "JUMP",
      "path": "4"
    },
    "648": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "649": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "651": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "652": {
      "op": "SWAP1"
    },
    "653": {
      "op": "ISZERO"
    },
    "654": {
      "op": "ISZERO"
    },
    "655": {
      "op": "DUP2"
    },
    "656": {
      "op": "MSTORE"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "663": {
      "op": "JUMP"
    },
    "664": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "665": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AB"
    },
    "668": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A6"
    },
    "671": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "672": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "674": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC79"
    },
    "677": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        5437,
        5914
      ],
      "op": "JUMP",
      "path": "4"
    },
    "678": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "679": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9CD"
    },
    "682": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        5437,
        5914
      ],
      "op": "JUMP",
      "path": "4"
    },
    "683": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "684": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "686": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "DUP1",
      "path": "4"
    },
    "687": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "688": {
      "op": "SWAP3"
    },
    "689": {
      "op": "DUP4"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "693": {
      "op": "DUP4"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "op": "SWAP2"
    },
    "696": {
      "op": "SWAP1"
    },
    "697": {
      "op": "SWAP2"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "703": {
      "op": "JUMP"
    },
    "704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "708": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE"
    },
    "711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC79"
    },
    "717": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xACE"
    },
    "722": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "723": {
      "offset": [
        576,
        600
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "724": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x192"
    },
    "727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E1"
    },
    "730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC5"
    },
    "736": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        576,
        600
      ],
      "op": "JUMP",
      "path": "4"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB66"
    },
    "741": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        576,
        600
      ],
      "op": "JUMP",
      "path": "4"
    },
    "742": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "743": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1613,
        1614
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x0"
    },
    "745": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1603,
        1610
      ],
      "op": "DUP3",
      "path": "4"
    },
    "746": {
      "branch": 32,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1603,
        1614
      ],
      "op": "GT",
      "path": "4"
    },
    "747": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33B"
    },
    "750": {
      "branch": 32,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "751": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "753": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "DUP2",
      "path": "4"
    },
    "762": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "765": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "767": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "DUP3",
      "path": "4"
    },
    "768": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "ADD",
      "path": "4"
    },
    "769": {
      "op": "MSTORE"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "774": {
      "op": "DUP3"
    },
    "775": {
      "op": "ADD"
    },
    "776": {
      "op": "MSTORE"
    },
    "777": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D757374206265206D6F7265207468616E2030000000000000"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "812": {
      "op": "DUP3"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "819": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "821": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "822": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "DUP1",
      "path": "4"
    },
    "823": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "824": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "SUB",
      "path": "4"
    },
    "825": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "826": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "827": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1595,
        1645
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "828": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1663,
        1685
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 2,
      "value": "0x344"
    },
    "831": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1678,
        1684
      ],
      "op": "DUP2",
      "path": "4"
    },
    "832": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1663,
        1677
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x963"
    },
    "835": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1663,
        1685
      ],
      "op": "JUMP",
      "path": "4"
    },
    "836": {
      "branch": 33,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1663,
        1685
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "837": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x390"
    },
    "840": {
      "branch": 33,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "841": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "843": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "DUP2",
      "path": "4"
    },
    "852": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "855": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "857": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "DUP3",
      "path": "4"
    },
    "858": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "ADD",
      "path": "4"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "864": {
      "op": "DUP3"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH32",
      "value": "0x546F6B656E2069732063757272656E746C79206E6F7420616C6C6F7765640000"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "902": {
      "op": "DUP3"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "op": "MSTORE"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "911": {
      "op": "JUMP"
    },
    "912": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1655,
        1720
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "913": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x40"
    },
    "915": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "916": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "923": {
      "op": "SHL"
    },
    "924": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP2",
      "path": "4"
    },
    "925": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "926": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2091,
        2101
      ],
      "op": "CALLER",
      "path": "4"
    },
    "927": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "929": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP3",
      "path": "4"
    },
    "930": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "ADD",
      "path": "4"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2111,
        2115
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "935": {
      "op": "DUP3"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "op": "MSTORE"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "940": {
      "op": "DUP2"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "op": "DUP4"
    },
    "943": {
      "op": "SWAP1"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "951": {
      "op": "SHL"
    },
    "952": {
      "op": "SUB"
    },
    "953": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2090
      ],
      "op": "DUP3",
      "path": "4"
    },
    "954": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2090
      ],
      "op": "AND",
      "path": "4"
    },
    "955": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2090
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "956": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2090
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "961": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2090
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "967": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "969": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "970": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "971": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP4",
      "path": "4"
    },
    "972": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "SUB",
      "path": "4"
    },
    "973": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP2",
      "path": "4"
    },
    "974": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "976": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP8",
      "path": "4"
    },
    "977": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "GAS",
      "path": "4"
    },
    "978": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "CALL",
      "path": "4"
    },
    "979": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "980": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "981": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "982": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E3"
    },
    "985": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "986": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "987": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "989": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "990": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "991": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "992": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "994": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "REVERT",
      "path": "4"
    },
    "995": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "996": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "POP",
      "path": "4"
    },
    "997": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "POP",
      "path": "4"
    },
    "998": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "POP",
      "path": "4"
    },
    "999": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "POP",
      "path": "4"
    },
    "1000": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1002": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1003": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1004": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1006": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "NOT",
      "path": "4"
    },
    "1007": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1009": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1010": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "ADD",
      "path": "4"
    },
    "1011": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "AND",
      "path": "4"
    },
    "1012": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1013": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "ADD",
      "path": "4"
    },
    "1014": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1015": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1017": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1018": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "POP",
      "path": "4"
    },
    "1019": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1020": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "ADD",
      "path": "4"
    },
    "1021": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1022": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x407"
    },
    "1025": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1026": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1027": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCDE"
    },
    "1030": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        2063,
        2126
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1031": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1032": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2063,
        2126
      ],
      "op": "POP",
      "path": "4"
    },
    "1033": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2136,
        2180
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x412"
    },
    "1036": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2161,
        2171
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1037": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2173,
        2179
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1038": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2136,
        2160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB76"
    },
    "1041": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        2136,
        2180
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1042": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2136,
        2180
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "op": "SUB"
    },
    "1051": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 5
    },
    "1052": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "AND",
      "path": "4"
    },
    "1053": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1055": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1056": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1057": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1058": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2253
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1060": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1062": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1063": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1064": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1065": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1067": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1068": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1069": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2261
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1070": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2262,
        2272
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1071": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2273
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1072": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2273
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1073": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2273
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1074": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2273
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1075": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2273
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1076": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2273
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1077": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2273
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1078": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2273
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1079": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2295
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x441"
    },
    "1082": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2295
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1083": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2288,
        2295
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1084": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2288,
        2295
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1085": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2295
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD16"
    },
    "1088": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        2239,
        2295
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1089": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2239,
        2295
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "op": "SUB"
    },
    "1098": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1099": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "AND",
      "path": "4"
    },
    "1100": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1102": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1103": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1104": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1105": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2204
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1107": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1109": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1110": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1111": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1112": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1114": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1115": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1116": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2212
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1117": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2213,
        2223
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1118": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2224
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1119": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2224
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1120": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2224
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1121": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2224
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1122": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2224
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1123": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2224
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1124": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2224
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1125": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2295
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1126": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2295
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1127": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2295
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1128": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2190,
        2295
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1129": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2444,
        2462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1131": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2444,
        2474
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1132": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2444,
        2474
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1133": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2444,
        2474
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1134": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2444,
        2474
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1135": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2478,
        2479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1137": {
      "branch": 34,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2444,
        2479
      ],
      "op": "EQ",
      "path": "4"
    },
    "1138": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2440,
        2530
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1139": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2440,
        2530
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B9"
    },
    "1142": {
      "branch": 34,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2440,
        2530
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1143": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2502
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x2"
    },
    "1145": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1146": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1147": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1149": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1150": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "ADD",
      "path": "4"
    },
    "1151": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1152": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1155": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1156": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1157": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1158": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1159": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1192": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "ADD",
      "path": "4"
    },
    "1193": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1194": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "op": "SUB"
    },
    "1203": {
      "op": "NOT"
    },
    "1204": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "AND",
      "path": "4"
    },
    "1205": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2508,
        2518
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1206": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "OR",
      "path": "4"
    },
    "1207": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1208": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2495,
        2519
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1209": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        2440,
        2530
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1210": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "POP",
      "path": "4"
    },
    "1211": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1524,
        2536
      ],
      "op": "POP",
      "path": "4"
    },
    "1212": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "o",
      "offset": [
        1524,
        2536
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1213": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6096,
        6198
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1214": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1216": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "op": "SUB"
    },
    "1225": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1226": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 7
    },
    "1227": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1228": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E7"
    },
    "1231": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1232": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1234": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1243": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1244": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1246": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1247": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1250": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2E"
    },
    "1254": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1255": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1256": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6178
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x1"
    },
    "1258": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1259": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1260": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1261": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1262": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "ADD",
      "path": "4"
    },
    "1263": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1264": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1268": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1269": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1270": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1271": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "1304": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "ADD",
      "path": "4"
    },
    "1305": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1306": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "SUB"
    },
    "1315": {
      "op": "NOT"
    },
    "1316": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "AND",
      "path": "4"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "SUB"
    },
    "1325": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1326": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1327": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1328": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "AND",
      "path": "4"
    },
    "1329": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1330": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1331": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1332": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "OR",
      "path": "4"
    },
    "1333": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1334": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        6165,
        6191
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1335": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "o",
      "offset": [
        6096,
        6198
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1336": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1346": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "AND",
      "path": "4"
    },
    "1347": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4941,
        4948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1349": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1350": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1351": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1352": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4986
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1354": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1356": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1357": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1359": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1360": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1361": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4968,
        4993
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1362": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4964,
        5033
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x55D"
    },
    "1365": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4964,
        5033
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5021,
        5022
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x0"
    },
    "1369": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5014,
        5022
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B9"
    },
    "1372": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5014,
        5022
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1373": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4964,
        5033
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1374": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5044,
        5057
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1376": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5059,
        5075
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1377": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5079,
        5100
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x569"
    },
    "1380": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5093,
        5099
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1381": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5079,
        5092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9CD"
    },
    "1384": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        5079,
        5100
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1385": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5079,
        5100
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1386": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5043,
        5100
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1387": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5043,
        5100
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5043,
        5100
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5269,
        5281
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x579"
    },
    "1394": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5043,
        5100
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1395": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5269,
        5271
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "1397": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5269,
        5281
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE47"
    },
    "1400": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        5269,
        5281
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1401": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5269,
        5281
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "op": "SUB"
    },
    "1410": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1411": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1412": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "AND",
      "path": "4"
    },
    "1413": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1415": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1416": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1417": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1418": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5241
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1420": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1422": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1423": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1424": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1425": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1427": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1428": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1429": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5249
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1430": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1431": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "DUP11",
      "path": "4"
    },
    "1432": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "AND",
      "path": "4"
    },
    "1433": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1434": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1435": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1436": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1437": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1438": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1439": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5256
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1440": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5264
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5AA"
    },
    "1443": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5264
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1444": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5259,
        5264
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1445": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5259,
        5264
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1446": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5264
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE53"
    },
    "1449": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        5227,
        5264
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1450": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5227,
        5264
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1451": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5226,
        5282
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B4"
    },
    "1454": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5226,
        5282
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1455": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5226,
        5282
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1456": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5226,
        5282
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE72"
    },
    "1459": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "i",
      "offset": [
        5226,
        5282
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1460": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5226,
        5282
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1461": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5218,
        5283
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1462": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5218,
        5283
      ],
      "op": "POP",
      "path": "4"
    },
    "1463": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5218,
        5283
      ],
      "op": "POP",
      "path": "4"
    },
    "1464": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        5218,
        5283
      ],
      "op": "POP",
      "path": "4"
    },
    "1465": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1466": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1467": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1468": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "POP",
      "path": "4"
    },
    "1469": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "offset": [
        4832,
        5290
      ],
      "op": "POP",
      "path": "4"
    },
    "1470": {
      "fn": "TokenFarm.getUserSingleTokenValue",
      "jump": "o",
      "offset": [
        4832,
        5290
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1471": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3069,
        3465
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1478": {
      "op": "SHL"
    },
    "1479": {
      "op": "SUB"
    },
    "1480": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1481": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "AND",
      "path": "4"
    },
    "1482": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3125,
        3140
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1484": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1485": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1486": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1487": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3157
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1489": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1491": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1492": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1493": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1494": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1496": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1497": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1498": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3165
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1499": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3166,
        3176
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1500": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3177
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1501": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3177
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1502": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3177
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1503": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3177
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1504": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3177
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1505": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3177
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1506": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3177
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1507": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3143,
        3177
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1508": {
      "branch": 35,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3195,
        3206
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 11
    },
    "1509": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x630"
    },
    "1512": {
      "branch": 35,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1513": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1515": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1524": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1527": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1529": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1530": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "ADD",
      "path": "4"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "ADD"
    },
    "1538": {
      "op": "MSTORE"
    },
    "1539": {
      "op": "PUSH32",
      "value": "0x5374616B696E672062616C616E63652063616E6E6F7420626520302E00000000"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "MSTORE"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "1583": {
      "op": "JUMP"
    },
    "1584": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3187,
        3239
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1585": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x40"
    },
    "1587": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1588": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1597": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1598": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3273,
        3283
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1599": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1601": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1602": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "ADD",
      "path": "4"
    },
    "1603": {
      "op": "MSTORE"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1606": {
      "op": "DUP2"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "op": "DUP3"
    },
    "1609": {
      "op": "SWAP1"
    },
    "1610": {
      "op": "MSTORE"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1617": {
      "op": "SHL"
    },
    "1618": {
      "op": "SUB"
    },
    "1619": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3272
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1620": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3272
      ],
      "op": "AND",
      "path": "4"
    },
    "1621": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1622": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3272
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1627": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1630": {
      "op": "ADD"
    },
    "1631": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1633": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1635": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1636": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1637": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1638": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "SUB",
      "path": "4"
    },
    "1639": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1640": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1642": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1643": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "GAS",
      "path": "4"
    },
    "1644": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "CALL",
      "path": "4"
    },
    "1645": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1646": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1647": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1648": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x67D"
    },
    "1651": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1652": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1653": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1655": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1656": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1657": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1658": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1660": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1661": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1662": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "POP",
      "path": "4"
    },
    "1663": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "POP",
      "path": "4"
    },
    "1664": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "POP",
      "path": "4"
    },
    "1665": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "POP",
      "path": "4"
    },
    "1666": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1668": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1669": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1670": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1672": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "NOT",
      "path": "4"
    },
    "1673": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1675": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1676": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "ADD",
      "path": "4"
    },
    "1677": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "AND",
      "path": "4"
    },
    "1678": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1679": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "ADD",
      "path": "4"
    },
    "1680": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1681": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1683": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1684": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "POP",
      "path": "4"
    },
    "1685": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1686": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "ADD",
      "path": "4"
    },
    "1687": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1688": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A1"
    },
    "1691": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1692": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1693": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCDE"
    },
    "1696": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        3249,
        3293
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1697": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3249,
        3293
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "op": "SUB"
    },
    "1707": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 13
    },
    "1708": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "AND",
      "path": "4"
    },
    "1709": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3340,
        3341
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1711": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1712": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1713": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1714": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3317
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1716": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1718": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1719": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1720": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1721": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1723": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1724": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1725": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3325
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1726": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3326,
        3336
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1727": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3337
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1728": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3337
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1729": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3337
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1730": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3337
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1731": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3337
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1732": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3337
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1733": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3337
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1734": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3341
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1735": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3341
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1736": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3303,
        3341
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1737": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3442
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x4"
    },
    "1739": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1740": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3454
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1741": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3454
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1742": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1743": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3454
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1744": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3454
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1745": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3458
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DC"
    },
    "1748": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1749": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3457,
        3458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1751": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3457,
        3458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1752": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3458
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE94"
    },
    "1755": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        3424,
        3458
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1756": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3424,
        3458
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1757": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3410,
        3420
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1758": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1760": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1761": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1762": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1763": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1765": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1767": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1768": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1770": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1771": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3421
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1772": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3391,
        3458
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "op": "POP"
    },
    "1775": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "o",
      "offset": [
        3069,
        3465
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1776": {
      "offset": [
        456,
        486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1777": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1779": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1780": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1781": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1782": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1783": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "LT",
      "path": "4"
    },
    "1784": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x700"
    },
    "1787": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1788": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1790": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1791": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1792": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1793": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1795": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1796": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1797": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1798": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1800": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1801": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1802": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1803": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "ADD",
      "path": "4"
    },
    "1804": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "op": "SUB"
    },
    "1813": {
      "offset": [
        456,
        486
      ],
      "op": "AND",
      "path": "4"
    },
    "1814": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        456,
        486
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "offset": [
        456,
        486
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1817": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "o",
      "offset": [
        456,
        486
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1818": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3566,
        4033
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1819": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1821": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1831": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1832": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1833": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x744"
    },
    "1836": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1837": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1839": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1840": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1846": {
      "op": "SHL"
    },
    "1847": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1848": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1849": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1851": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1852": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1855": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1856": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2E"
    },
    "1859": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1860": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1861": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3621,
        3630
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1863": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3616,
        4027
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1864": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3640,
        3647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1866": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3640,
        3654
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1867": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3636,
        3654
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1868": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3636,
        3654
      ],
      "op": "LT",
      "path": "4"
    },
    "1869": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3616,
        4027
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1870": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3616,
        4027
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x814"
    },
    "1873": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3616,
        4027
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1874": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3675,
        3692
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1876": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3702
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1878": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3703,
        3704
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1879": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1880": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1881": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1882": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "LT",
      "path": "4"
    },
    "1883": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x766"
    },
    "1886": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1887": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x766"
    },
    "1890": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEAB"
    },
    "1893": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        3695,
        3705
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1894": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1895": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1897": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1898": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1899": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1900": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1902": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1903": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1904": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "ADD",
      "path": "4"
    },
    "1905": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1912": {
      "op": "SHL"
    },
    "1913": {
      "op": "SUB"
    },
    "1914": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "AND",
      "path": "4"
    },
    "1915": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3818,
        3846
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x785"
    },
    "1920": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3695,
        3705
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1921": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3818,
        3835
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A5"
    },
    "1924": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1925": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3818,
        3846
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1926": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        3980
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x6"
    },
    "1928": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        3980
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1929": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1931": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1932": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1939": {
      "op": "SHL"
    },
    "1940": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1941": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "op": "DUP6"
    },
    "1951": {
      "op": "DUP2"
    },
    "1952": {
      "op": "AND"
    },
    "1953": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1955": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1956": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "ADD",
      "path": "4"
    },
    "1957": {
      "op": "MSTORE"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1960": {
      "op": "DUP3"
    },
    "1961": {
      "op": "ADD"
    },
    "1962": {
      "op": "DUP5"
    },
    "1963": {
      "op": "SWAP1"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3793,
        3846
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1966": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3793,
        3846
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1967": {
      "op": "POP"
    },
    "1968": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        3980
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1969": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        3980
      ],
      "op": "AND",
      "path": "4"
    },
    "1970": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        3980
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1971": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        3989
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1976": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        3989
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1982": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1984": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1985": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1986": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1987": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "SUB",
      "path": "4"
    },
    "1988": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1989": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1991": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1992": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "GAS",
      "path": "4"
    },
    "1993": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "CALL",
      "path": "4"
    },
    "1994": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1995": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1996": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1997": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7DA"
    },
    "2000": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2001": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2002": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2004": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2005": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2006": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2007": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2009": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2010": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2011": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "POP",
      "path": "4"
    },
    "2012": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "POP",
      "path": "4"
    },
    "2013": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "POP",
      "path": "4"
    },
    "2014": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "POP",
      "path": "4"
    },
    "2015": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2017": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2018": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2019": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2021": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "NOT",
      "path": "4"
    },
    "2022": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2024": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2025": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "ADD",
      "path": "4"
    },
    "2026": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "AND",
      "path": "4"
    },
    "2027": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2028": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "ADD",
      "path": "4"
    },
    "2029": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2030": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2032": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2033": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "POP",
      "path": "4"
    },
    "2034": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2035": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "ADD",
      "path": "4"
    },
    "2036": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2037": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7FE"
    },
    "2040": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2041": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2042": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCDE"
    },
    "2045": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        3971,
        4016
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2046": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2047": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3971,
        4016
      ],
      "op": "POP",
      "path": "4"
    },
    "2048": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3661,
        4027
      ],
      "op": "POP",
      "path": "4"
    },
    "2049": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3661,
        4027
      ],
      "op": "POP",
      "path": "4"
    },
    "2050": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 16
    },
    "2051": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2052": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x80C"
    },
    "2055": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2056": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC1"
    },
    "2059": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        3656,
        3659
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2060": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2061": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2062": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "POP",
      "path": "4"
    },
    "2063": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3656,
        3659
      ],
      "op": "POP",
      "path": "4"
    },
    "2064": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3616,
        4027
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x747"
    },
    "2067": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3616,
        4027
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2068": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3616,
        4027
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2069": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        3616,
        4027
      ],
      "op": "POP",
      "path": "4"
    },
    "2070": {
      "fn": "TokenFarm.issueTokens",
      "jump": "o",
      "offset": [
        3566,
        4033
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2071": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2072": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2074": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2084": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2085": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2086": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x841"
    },
    "2089": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2090": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2092": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2101": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2102": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2104": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2105": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2108": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2109": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2E"
    },
    "2112": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2113": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x84B"
    },
    "2117": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2119": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE1"
    },
    "2122": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2123": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2124": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2125": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1189,
        1351
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2126": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2128": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "op": "SUB"
    },
    "2137": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2138": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2139": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2140": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x877"
    },
    "2143": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2144": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2146": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2147": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2153": {
      "op": "SHL"
    },
    "2154": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2155": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2156": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2158": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2159": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2162": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2163": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2E"
    },
    "2166": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2167": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "SUB"
    },
    "2176": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 18
    },
    "2177": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2178": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "AND",
      "path": "4"
    },
    "2179": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2181": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2182": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2183": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2184": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2186": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2188": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2189": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2191": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2192": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1331
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2193": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2194": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2201": {
      "op": "SHL"
    },
    "2202": {
      "op": "SUB"
    },
    "2203": {
      "op": "NOT"
    },
    "2204": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "AND",
      "path": "4"
    },
    "2205": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2206": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2207": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2208": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "AND",
      "path": "4"
    },
    "2209": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "OR",
      "path": "4"
    },
    "2210": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2211": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1302,
        1344
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2212": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "o",
      "offset": [
        1189,
        1351
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2213": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "op": "SUB"
    },
    "2222": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 19
    },
    "2223": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "AND",
      "path": "4"
    },
    "2224": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4297,
        4304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2226": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2227": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2228": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2229": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4374
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2231": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2233": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2234": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2236": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2237": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2238": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4356,
        4381
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2239": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4297,
        4304
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2240": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4297,
        4304
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2241": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x900"
    },
    "2244": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2245": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2247": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2256": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2259": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2261": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2262": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "ADD",
      "path": "4"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2268": {
      "op": "DUP3"
    },
    "2269": {
      "op": "ADD"
    },
    "2270": {
      "op": "MSTORE"
    },
    "2271": {
      "op": "PUSH17",
      "value": "0x4E6F20746F6B656E73207374616B656421"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2294": {
      "op": "DUP3"
    },
    "2295": {
      "op": "ADD"
    },
    "2296": {
      "op": "MSTORE"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2299": {
      "op": "ADD"
    },
    "2300": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "2303": {
      "op": "JUMP"
    },
    "2304": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4348,
        4407
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2305": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4422,
        4431
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2307": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4417,
        4599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2308": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4441,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2310": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4441,
        4461
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2311": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4437,
        4461
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2312": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4437,
        4461
      ],
      "op": "LT",
      "path": "4"
    },
    "2313": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4417,
        4599
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2314": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4417,
        4599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x95C"
    },
    "2317": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4417,
        4599
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2318": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4540,
        4588
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 20,
      "value": "0x93E"
    },
    "2321": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4564,
        4569
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2322": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4584
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2324": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4585,
        4586
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2325": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2326": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2327": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2328": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "LT",
      "path": "4"
    },
    "2329": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x924"
    },
    "2332": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2333": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x924"
    },
    "2336": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEAB"
    },
    "2339": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4571,
        4587
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2340": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2341": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2343": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2344": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2345": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2346": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2348": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2349": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2350": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2351": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "ADD",
      "path": "4"
    },
    "2352": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2359": {
      "op": "SHL"
    },
    "2360": {
      "op": "SUB"
    },
    "2361": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4571,
        4587
      ],
      "op": "AND",
      "path": "4"
    },
    "2362": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4540,
        4563
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x538"
    },
    "2365": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4540,
        4588
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2366": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4540,
        4588
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2367": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4511,
        4588
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x948"
    },
    "2370": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4511,
        4588
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2371": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4511,
        4521
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2372": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4511,
        4588
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD16"
    },
    "2375": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4511,
        4588
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2376": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4511,
        4588
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2377": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4482,
        4588
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4463,
        4466
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 21
    },
    "2380": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4463,
        4466
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x954"
    },
    "2383": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4463,
        4466
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2384": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4463,
        4466
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC1"
    },
    "2387": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4463,
        4466
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2388": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4463,
        4466
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2389": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4463,
        4466
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2390": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4463,
        4466
      ],
      "op": "POP",
      "path": "4"
    },
    "2391": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4463,
        4466
      ],
      "op": "POP",
      "path": "4"
    },
    "2392": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4417,
        4599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x903"
    },
    "2395": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4417,
        4599
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2396": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4417,
        4599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2397": {
      "op": "POP"
    },
    "2398": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4615,
        4625
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 22
    },
    "2399": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4234,
        4632
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "o",
      "offset": [
        4234,
        4632
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2403": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2404": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6472,
        6476
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2406": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6472,
        6476
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2407": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6488,
        6639
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2408": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6512,
        6525
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2410": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6512,
        6532
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2411": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6508,
        6532
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2412": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6508,
        6532
      ],
      "op": "LT",
      "path": "4"
    },
    "2413": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6488,
        6639
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2414": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6488,
        6639
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9C4"
    },
    "2417": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6488,
        6639
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2418": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6577,
        6583
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "SUB"
    },
    "2427": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6583
      ],
      "op": "AND",
      "path": "4"
    },
    "2428": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6570
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2430": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6571,
        6572
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2431": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2432": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2433": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2434": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "LT",
      "path": "4"
    },
    "2435": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x98E"
    },
    "2438": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2439": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x98E"
    },
    "2442": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEAB"
    },
    "2445": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        6557,
        6573
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2446": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2447": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2449": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2450": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2451": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2452": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2454": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2455": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2456": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2457": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "ADD",
      "path": "4"
    },
    "2458": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "op": "SUB"
    },
    "2467": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6573
      ],
      "op": "AND",
      "path": "4"
    },
    "2468": {
      "branch": 36,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6557,
        6583
      ],
      "op": "EQ",
      "path": "4"
    },
    "2469": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6553,
        6629
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2470": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6553,
        6629
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B2"
    },
    "2473": {
      "branch": 36,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6553,
        6629
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6610,
        6614
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0x1"
    },
    "2477": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6610,
        6614
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2478": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        6416,
        6667
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2482": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6553,
        6629
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2483": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6534,
        6537
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 24
    },
    "2484": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6534,
        6537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9BC"
    },
    "2487": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6534,
        6537
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2488": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6534,
        6537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC1"
    },
    "2491": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        6534,
        6537
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2492": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6534,
        6537
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2493": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6534,
        6537
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2494": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6534,
        6537
      ],
      "op": "POP",
      "path": "4"
    },
    "2495": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6534,
        6537
      ],
      "op": "POP",
      "path": "4"
    },
    "2496": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6488,
        6639
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x967"
    },
    "2499": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6488,
        6639
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2500": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6488,
        6639
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2501": {
      "op": "POP"
    },
    "2502": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6655,
        6660
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x0"
    },
    "2504": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6655,
        6660
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2505": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        6416,
        6667
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "op": "POP"
    },
    "2508": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        6416,
        6667
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2509": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2516": {
      "op": "SHL"
    },
    "2517": {
      "op": "SUB"
    },
    "2518": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2519": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2520": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "AND",
      "path": "4"
    },
    "2521": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5521,
        5528
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2523": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2524": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2525": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2526": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5631
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2528": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2530": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2531": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2533": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2534": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2535": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2536": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2537": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2538": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2539": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2548": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2549": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2550": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2551": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5521,
        5528
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2552": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5521,
        5528
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2553": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5521,
        5528
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2554": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5521,
        5528
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2555": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2556": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "AND",
      "path": "4"
    },
    "2557": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2558": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2559": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2560": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5521,
        5528
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2561": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5521,
        5528
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2562": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2563": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2564": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5805
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "2569": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5805
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2570": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2572": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2573": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2574": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "ADD",
      "path": "4"
    },
    "2575": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2576": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "2578": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2579": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2580": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2581": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2582": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2583": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2584": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SUB",
      "path": "4"
    },
    "2585": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "ADD",
      "path": "4"
    },
    "2586": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2587": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5610,
        5639
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2588": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "GAS",
      "path": "4"
    },
    "2589": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2590": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2591": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2592": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2593": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA2E"
    },
    "2596": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2597": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2598": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2600": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2601": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2602": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2603": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2605": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2606": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2607": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2608": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2609": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2610": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2611": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2613": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2614": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2615": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2617": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "NOT",
      "path": "4"
    },
    "2618": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2620": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2621": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "ADD",
      "path": "4"
    },
    "2622": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "AND",
      "path": "4"
    },
    "2623": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2624": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "ADD",
      "path": "4"
    },
    "2625": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2626": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2628": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2629": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2630": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2631": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "ADD",
      "path": "4"
    },
    "2632": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2633": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA52"
    },
    "2636": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2637": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2638": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEF6"
    },
    "2641": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        5780,
        5807
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2642": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5780,
        5807
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2643": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5755,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2644": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5755,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2645": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5755,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2646": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5755,
        5807
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2647": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5755,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2648": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5755,
        5807
      ],
      "op": "POP",
      "path": "4"
    },
    "2649": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5817,
        5831
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2651": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5843
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "op": "SUB"
    },
    "2660": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5852
      ],
      "op": "AND",
      "path": "4"
    },
    "2661": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5852
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "2666": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2668": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2669": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2670": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2675": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "AND",
      "path": "4"
    },
    "2676": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "2678": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "SHL",
      "path": "4"
    },
    "2679": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2680": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2681": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2683": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "ADD",
      "path": "4"
    },
    "2684": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2686": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2688": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2689": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2690": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2691": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "SUB",
      "path": "4"
    },
    "2692": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2693": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2694": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "GAS",
      "path": "4"
    },
    "2695": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2696": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2697": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2698": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2699": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA98"
    },
    "2702": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2703": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2704": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2706": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2707": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2708": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2709": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2711": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2712": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2713": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "POP",
      "path": "4"
    },
    "2714": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "POP",
      "path": "4"
    },
    "2715": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "POP",
      "path": "4"
    },
    "2716": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "POP",
      "path": "4"
    },
    "2717": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2719": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2720": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2721": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2723": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "NOT",
      "path": "4"
    },
    "2724": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2726": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2727": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "ADD",
      "path": "4"
    },
    "2728": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "AND",
      "path": "4"
    },
    "2729": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2730": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "ADD",
      "path": "4"
    },
    "2731": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2732": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2734": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2735": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "POP",
      "path": "4"
    },
    "2736": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2737": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "ADD",
      "path": "4"
    },
    "2738": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2739": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xABC"
    },
    "2742": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2743": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2744": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF46"
    },
    "2747": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        5834,
        5854
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2748": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5834,
        5854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2749": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5881,
        5886
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 26
    },
    "2750": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5881,
        5886
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "2751": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5889,
        5906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2753": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5889,
        5906
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2754": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5889,
        5906
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2755": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5889,
        5906
      ],
      "op": "AND",
      "path": "4"
    },
    "2756": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5889,
        5906
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2757": {
      "op": "POP"
    },
    "2758": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2759": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        5437,
        5914
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2760": {
      "op": "POP"
    },
    "2761": {
      "op": "POP"
    },
    "2762": {
      "op": "POP"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "op": "POP"
    },
    "2765": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "o",
      "offset": [
        5437,
        5914
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2767": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2769": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2776": {
      "op": "SHL"
    },
    "2777": {
      "op": "SUB"
    },
    "2778": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2779": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2780": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2781": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF8"
    },
    "2784": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2785": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2787": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2796": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2797": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2799": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2800": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2803": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2804": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2E"
    },
    "2807": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2808": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2815": {
      "op": "SHL"
    },
    "2816": {
      "op": "SUB"
    },
    "2817": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 27
    },
    "2818": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "2819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5D"
    },
    "2822": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2832": {
      "op": "SHL"
    },
    "2833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "2841": {
      "op": "MSTORE"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2846": {
      "op": "DUP3"
    },
    "2847": {
      "op": "ADD"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2884": {
      "op": "DUP3"
    },
    "2885": {
      "op": "ADD"
    },
    "2886": {
      "op": "MSTORE"
    },
    "2887": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2896": {
      "op": "SHL"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2899": {
      "op": "DUP3"
    },
    "2900": {
      "op": "ADD"
    },
    "2901": {
      "op": "MSTORE"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2908": {
      "op": "JUMP"
    },
    "2909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x814"
    },
    "2913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE1"
    },
    "2917": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2918": {
      "offset": [
        576,
        600
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2923": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "LT",
      "path": "4"
    },
    "2926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x700"
    },
    "2929": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2932": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        576,
        600
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2934": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2726,
        2938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "op": "SUB"
    },
    "2943": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2944": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2945": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "AND",
      "path": "4"
    },
    "2946": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2847,
        2848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2948": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2949": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2950": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2951": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2953": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2955": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2956": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2957": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2958": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2960": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2961": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2962": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2836
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2963": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2964": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2965": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "AND",
      "path": "4"
    },
    "2966": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2967": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2968": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2969": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2970": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2971": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2972": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2814,
        2843
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2973": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2810,
        2932
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B9"
    },
    "2976": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2810,
        2932
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "op": "SUB"
    },
    "2985": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 29
    },
    "2986": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "AND",
      "path": "4"
    },
    "2987": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2989": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2990": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2991": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2992": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2910
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2994": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2996": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2997": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2999": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3000": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3001": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2917
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3002": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2921
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC4"
    },
    "3005": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2921
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3006": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2920,
        2921
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3008": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2921
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD16"
    },
    "3011": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "jump": "i",
      "offset": [
        2892,
        2921
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3012": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2892,
        2921
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "op": "SUB"
    },
    "3021": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3022": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "AND",
      "path": "4"
    },
    "3023": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3025": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3026": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3027": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3028": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2882
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3030": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3032": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3033": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3035": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3036": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2889
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3037": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2864,
        2921
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3038": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2726,
        2938
      ],
      "op": "POP",
      "path": "4"
    },
    "3039": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "offset": [
        2726,
        2938
      ],
      "op": "POP",
      "path": "4"
    },
    "3040": {
      "fn": "TokenFarm.updateUniqueTokensStaked",
      "jump": "o",
      "offset": [
        2726,
        2938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3041": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3042": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3044": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3045": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "op": "SUB"
    },
    "3054": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 30
    },
    "3055": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3056": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "op": "SUB"
    },
    "3065": {
      "op": "NOT"
    },
    "3066": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3067": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3068": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3069": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "3070": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3071": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3072": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x40"
    },
    "3074": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3075": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3076": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3077": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3078": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "3079": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3080": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3081": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3082": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3115": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3116": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3117": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3118": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3119": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3120": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3121": {
      "op": "JUMPDEST"
    },
    "3122": {
      "op": "DUP1"
    },
    "3123": {
      "op": "CALLDATALOAD"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3130": {
      "op": "SHL"
    },
    "3131": {
      "op": "SUB"
    },
    "3132": {
      "op": "DUP2"
    },
    "3133": {
      "op": "AND"
    },
    "3134": {
      "op": "DUP2"
    },
    "3135": {
      "op": "EQ"
    },
    "3136": {
      "op": "PUSH2",
      "value": "0xC48"
    },
    "3139": {
      "op": "JUMPI"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3142": {
      "op": "DUP1"
    },
    "3143": {
      "op": "REVERT"
    },
    "3144": {
      "op": "JUMPDEST"
    },
    "3145": {
      "op": "SWAP2"
    },
    "3146": {
      "op": "SWAP1"
    },
    "3147": {
      "op": "POP"
    },
    "3148": {
      "jump": "o",
      "op": "JUMP"
    },
    "3149": {
      "op": "JUMPDEST"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3152": {
      "op": "DUP1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3155": {
      "op": "DUP4"
    },
    "3156": {
      "op": "DUP6"
    },
    "3157": {
      "op": "SUB"
    },
    "3158": {
      "op": "SLT"
    },
    "3159": {
      "op": "ISZERO"
    },
    "3160": {
      "op": "PUSH2",
      "value": "0xC60"
    },
    "3163": {
      "op": "JUMPI"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3166": {
      "op": "DUP1"
    },
    "3167": {
      "op": "REVERT"
    },
    "3168": {
      "op": "JUMPDEST"
    },
    "3169": {
      "op": "DUP3"
    },
    "3170": {
      "op": "CALLDATALOAD"
    },
    "3171": {
      "op": "SWAP2"
    },
    "3172": {
      "op": "POP"
    },
    "3173": {
      "op": "PUSH2",
      "value": "0xC70"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3178": {
      "op": "DUP5"
    },
    "3179": {
      "op": "ADD"
    },
    "3180": {
      "op": "PUSH2",
      "value": "0xC31"
    },
    "3183": {
      "jump": "i",
      "op": "JUMP"
    },
    "3184": {
      "op": "JUMPDEST"
    },
    "3185": {
      "op": "SWAP1"
    },
    "3186": {
      "op": "POP"
    },
    "3187": {
      "op": "SWAP3"
    },
    "3188": {
      "op": "POP"
    },
    "3189": {
      "op": "SWAP3"
    },
    "3190": {
      "op": "SWAP1"
    },
    "3191": {
      "op": "POP"
    },
    "3192": {
      "jump": "o",
      "op": "JUMP"
    },
    "3193": {
      "op": "JUMPDEST"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3198": {
      "op": "DUP3"
    },
    "3199": {
      "op": "DUP5"
    },
    "3200": {
      "op": "SUB"
    },
    "3201": {
      "op": "SLT"
    },
    "3202": {
      "op": "ISZERO"
    },
    "3203": {
      "op": "PUSH2",
      "value": "0xC8B"
    },
    "3206": {
      "op": "JUMPI"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3209": {
      "op": "DUP1"
    },
    "3210": {
      "op": "REVERT"
    },
    "3211": {
      "op": "JUMPDEST"
    },
    "3212": {
      "op": "PUSH2",
      "value": "0xC94"
    },
    "3215": {
      "op": "DUP3"
    },
    "3216": {
      "op": "PUSH2",
      "value": "0xC31"
    },
    "3219": {
      "jump": "i",
      "op": "JUMP"
    },
    "3220": {
      "op": "JUMPDEST"
    },
    "3221": {
      "op": "SWAP4"
    },
    "3222": {
      "op": "SWAP3"
    },
    "3223": {
      "op": "POP"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "op": "POP"
    },
    "3226": {
      "jump": "o",
      "op": "JUMP"
    },
    "3227": {
      "op": "JUMPDEST"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3230": {
      "op": "DUP1"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3233": {
      "op": "DUP4"
    },
    "3234": {
      "op": "DUP6"
    },
    "3235": {
      "op": "SUB"
    },
    "3236": {
      "op": "SLT"
    },
    "3237": {
      "op": "ISZERO"
    },
    "3238": {
      "op": "PUSH2",
      "value": "0xCAE"
    },
    "3241": {
      "op": "JUMPI"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3244": {
      "op": "DUP1"
    },
    "3245": {
      "op": "REVERT"
    },
    "3246": {
      "op": "JUMPDEST"
    },
    "3247": {
      "op": "PUSH2",
      "value": "0xCB7"
    },
    "3250": {
      "op": "DUP4"
    },
    "3251": {
      "op": "PUSH2",
      "value": "0xC31"
    },
    "3254": {
      "jump": "i",
      "op": "JUMP"
    },
    "3255": {
      "op": "JUMPDEST"
    },
    "3256": {
      "op": "SWAP2"
    },
    "3257": {
      "op": "POP"
    },
    "3258": {
      "op": "PUSH2",
      "value": "0xC70"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3263": {
      "op": "DUP5"
    },
    "3264": {
      "op": "ADD"
    },
    "3265": {
      "op": "PUSH2",
      "value": "0xC31"
    },
    "3268": {
      "jump": "i",
      "op": "JUMP"
    },
    "3269": {
      "op": "JUMPDEST"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3274": {
      "op": "DUP3"
    },
    "3275": {
      "op": "DUP5"
    },
    "3276": {
      "op": "SUB"
    },
    "3277": {
      "op": "SLT"
    },
    "3278": {
      "op": "ISZERO"
    },
    "3279": {
      "op": "PUSH2",
      "value": "0xCD7"
    },
    "3282": {
      "op": "JUMPI"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3285": {
      "op": "DUP1"
    },
    "3286": {
      "op": "REVERT"
    },
    "3287": {
      "op": "JUMPDEST"
    },
    "3288": {
      "op": "POP"
    },
    "3289": {
      "op": "CALLDATALOAD"
    },
    "3290": {
      "op": "SWAP2"
    },
    "3291": {
      "op": "SWAP1"
    },
    "3292": {
      "op": "POP"
    },
    "3293": {
      "jump": "o",
      "op": "JUMP"
    },
    "3294": {
      "op": "JUMPDEST"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3299": {
      "op": "DUP3"
    },
    "3300": {
      "op": "DUP5"
    },
    "3301": {
      "op": "SUB"
    },
    "3302": {
      "op": "SLT"
    },
    "3303": {
      "op": "ISZERO"
    },
    "3304": {
      "op": "PUSH2",
      "value": "0xCF0"
    },
    "3307": {
      "op": "JUMPI"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3310": {
      "op": "DUP1"
    },
    "3311": {
      "op": "REVERT"
    },
    "3312": {
      "op": "JUMPDEST"
    },
    "3313": {
      "op": "DUP2"
    },
    "3314": {
      "op": "MLOAD"
    },
    "3315": {
      "op": "DUP1"
    },
    "3316": {
      "op": "ISZERO"
    },
    "3317": {
      "op": "ISZERO"
    },
    "3318": {
      "op": "DUP2"
    },
    "3319": {
      "op": "EQ"
    },
    "3320": {
      "op": "PUSH2",
      "value": "0xC94"
    },
    "3323": {
      "op": "JUMPI"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3326": {
      "op": "DUP1"
    },
    "3327": {
      "op": "REVERT"
    },
    "3328": {
      "op": "JUMPDEST"
    },
    "3329": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3339": {
      "op": "MSTORE"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3344": {
      "op": "MSTORE"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3349": {
      "op": "REVERT"
    },
    "3350": {
      "op": "JUMPDEST"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3353": {
      "op": "DUP3"
    },
    "3354": {
      "op": "NOT"
    },
    "3355": {
      "op": "DUP3"
    },
    "3356": {
      "op": "GT"
    },
    "3357": {
      "op": "ISZERO"
    },
    "3358": {
      "op": "PUSH2",
      "value": "0xD29"
    },
    "3361": {
      "op": "JUMPI"
    },
    "3362": {
      "op": "PUSH2",
      "value": "0xD29"
    },
    "3365": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3368": {
      "jump": "i",
      "op": "JUMP"
    },
    "3369": {
      "op": "JUMPDEST"
    },
    "3370": {
      "op": "POP"
    },
    "3371": {
      "op": "ADD"
    },
    "3372": {
      "op": "SWAP1"
    },
    "3373": {
      "jump": "o",
      "op": "JUMP"
    },
    "3374": {
      "op": "JUMPDEST"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3377": {
      "op": "DUP1"
    },
    "3378": {
      "op": "DUP3"
    },
    "3379": {
      "op": "MSTORE"
    },
    "3380": {
      "op": "DUP2"
    },
    "3381": {
      "op": "DUP2"
    },
    "3382": {
      "op": "ADD"
    },
    "3383": {
      "op": "MSTORE"
    },
    "3384": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3419": {
      "op": "DUP3"
    },
    "3420": {
      "op": "ADD"
    },
    "3421": {
      "op": "MSTORE"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "SWAP1"
    },
    "3426": {
      "jump": "o",
      "op": "JUMP"
    },
    "3427": {
      "op": "JUMPDEST"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3430": {
      "op": "DUP2"
    },
    "3431": {
      "op": "DUP2"
    },
    "3432": {
      "op": "JUMPDEST"
    },
    "3433": {
      "op": "DUP1"
    },
    "3434": {
      "op": "DUP6"
    },
    "3435": {
      "op": "GT"
    },
    "3436": {
      "op": "ISZERO"
    },
    "3437": {
      "op": "PUSH2",
      "value": "0xD9E"
    },
    "3440": {
      "op": "JUMPI"
    },
    "3441": {
      "op": "DUP2"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3444": {
      "op": "NOT"
    },
    "3445": {
      "op": "DIV"
    },
    "3446": {
      "op": "DUP3"
    },
    "3447": {
      "op": "GT"
    },
    "3448": {
      "op": "ISZERO"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3452": {
      "op": "JUMPI"
    },
    "3453": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3456": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3459": {
      "jump": "i",
      "op": "JUMP"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "op": "DUP1"
    },
    "3462": {
      "op": "DUP6"
    },
    "3463": {
      "op": "AND"
    },
    "3464": {
      "op": "ISZERO"
    },
    "3465": {
      "op": "PUSH2",
      "value": "0xD91"
    },
    "3468": {
      "op": "JUMPI"
    },
    "3469": {
      "op": "SWAP2"
    },
    "3470": {
      "op": "DUP2"
    },
    "3471": {
      "op": "MUL"
    },
    "3472": {
      "op": "SWAP2"
    },
    "3473": {
      "op": "JUMPDEST"
    },
    "3474": {
      "op": "SWAP4"
    },
    "3475": {
      "op": "DUP5"
    },
    "3476": {
      "op": "SHR"
    },
    "3477": {
      "op": "SWAP4"
    },
    "3478": {
      "op": "SWAP1"
    },
    "3479": {
      "op": "DUP1"
    },
    "3480": {
      "op": "MUL"
    },
    "3481": {
      "op": "SWAP1"
    },
    "3482": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "3485": {
      "op": "JUMP"
    },
    "3486": {
      "op": "JUMPDEST"
    },
    "3487": {
      "op": "POP"
    },
    "3488": {
      "op": "SWAP3"
    },
    "3489": {
      "op": "POP"
    },
    "3490": {
      "op": "SWAP3"
    },
    "3491": {
      "op": "SWAP1"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "jump": "o",
      "op": "JUMP"
    },
    "3494": {
      "op": "JUMPDEST"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3497": {
      "op": "DUP3"
    },
    "3498": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3501": {
      "op": "JUMPI"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3505": {
      "op": "PUSH2",
      "value": "0x5B9"
    },
    "3508": {
      "op": "JUMP"
    },
    "3509": {
      "op": "JUMPDEST"
    },
    "3510": {
      "op": "DUP2"
    },
    "3511": {
      "op": "PUSH2",
      "value": "0xDC2"
    },
    "3514": {
      "op": "JUMPI"
    },
    "3515": {
      "op": "POP"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3518": {
      "op": "PUSH2",
      "value": "0x5B9"
    },
    "3521": {
      "op": "JUMP"
    },
    "3522": {
      "op": "JUMPDEST"
    },
    "3523": {
      "op": "DUP2"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3526": {
      "op": "DUP2"
    },
    "3527": {
      "op": "EQ"
    },
    "3528": {
      "op": "PUSH2",
      "value": "0xDD8"
    },
    "3531": {
      "op": "JUMPI"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3534": {
      "op": "DUP2"
    },
    "3535": {
      "op": "EQ"
    },
    "3536": {
      "op": "PUSH2",
      "value": "0xDE2"
    },
    "3539": {
      "op": "JUMPI"
    },
    "3540": {
      "op": "PUSH2",
      "value": "0xDFE"
    },
    "3543": {
      "op": "JUMP"
    },
    "3544": {
      "op": "JUMPDEST"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3547": {
      "op": "SWAP2"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "op": "POP"
    },
    "3550": {
      "op": "PUSH2",
      "value": "0x5B9"
    },
    "3553": {
      "op": "JUMP"
    },
    "3554": {
      "op": "JUMPDEST"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3557": {
      "op": "DUP5"
    },
    "3558": {
      "op": "GT"
    },
    "3559": {
      "op": "ISZERO"
    },
    "3560": {
      "op": "PUSH2",
      "value": "0xDF3"
    },
    "3563": {
      "op": "JUMPI"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0xDF3"
    },
    "3567": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3570": {
      "jump": "i",
      "op": "JUMP"
    },
    "3571": {
      "op": "JUMPDEST"
    },
    "3572": {
      "op": "POP"
    },
    "3573": {
      "op": "POP"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3576": {
      "op": "DUP3"
    },
    "3577": {
      "op": "SHL"
    },
    "3578": {
      "op": "PUSH2",
      "value": "0x5B9"
    },
    "3581": {
      "op": "JUMP"
    },
    "3582": {
      "op": "JUMPDEST"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3586": {
      "op": "DUP4"
    },
    "3587": {
      "op": "LT"
    },
    "3588": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "3591": {
      "op": "DUP4"
    },
    "3592": {
      "op": "LT"
    },
    "3593": {
      "op": "AND"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "3596": {
      "op": "DUP5"
    },
    "3597": {
      "op": "LT"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3600": {
      "op": "DUP5"
    },
    "3601": {
      "op": "LT"
    },
    "3602": {
      "op": "AND"
    },
    "3603": {
      "op": "OR"
    },
    "3604": {
      "op": "ISZERO"
    },
    "3605": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3608": {
      "op": "JUMPI"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "op": "DUP2"
    },
    "3611": {
      "op": "DUP2"
    },
    "3612": {
      "op": "EXP"
    },
    "3613": {
      "op": "PUSH2",
      "value": "0x5B9"
    },
    "3616": {
      "op": "JUMP"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "PUSH2",
      "value": "0xE2B"
    },
    "3621": {
      "op": "DUP4"
    },
    "3622": {
      "op": "DUP4"
    },
    "3623": {
      "op": "PUSH2",
      "value": "0xD63"
    },
    "3626": {
      "jump": "i",
      "op": "JUMP"
    },
    "3627": {
      "op": "JUMPDEST"
    },
    "3628": {
      "op": "DUP1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3631": {
      "op": "NOT"
    },
    "3632": {
      "op": "DIV"
    },
    "3633": {
      "op": "DUP3"
    },
    "3634": {
      "op": "GT"
    },
    "3635": {
      "op": "ISZERO"
    },
    "3636": {
      "op": "PUSH2",
      "value": "0xE3F"
    },
    "3639": {
      "op": "JUMPI"
    },
    "3640": {
      "op": "PUSH2",
      "value": "0xE3F"
    },
    "3643": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3646": {
      "jump": "i",
      "op": "JUMP"
    },
    "3647": {
      "op": "JUMPDEST"
    },
    "3648": {
      "op": "MUL"
    },
    "3649": {
      "op": "SWAP4"
    },
    "3650": {
      "op": "SWAP3"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "jump": "o",
      "op": "JUMP"
    },
    "3655": {
      "op": "JUMPDEST"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3658": {
      "op": "PUSH2",
      "value": "0xC94"
    },
    "3661": {
      "op": "DUP4"
    },
    "3662": {
      "op": "DUP4"
    },
    "3663": {
      "op": "PUSH2",
      "value": "0xDA6"
    },
    "3666": {
      "jump": "i",
      "op": "JUMP"
    },
    "3667": {
      "op": "JUMPDEST"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3670": {
      "op": "DUP2"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3673": {
      "op": "NOT"
    },
    "3674": {
      "op": "DIV"
    },
    "3675": {
      "op": "DUP4"
    },
    "3676": {
      "op": "GT"
    },
    "3677": {
      "op": "DUP3"
    },
    "3678": {
      "op": "ISZERO"
    },
    "3679": {
      "op": "ISZERO"
    },
    "3680": {
      "op": "AND"
    },
    "3681": {
      "op": "ISZERO"
    },
    "3682": {
      "op": "PUSH2",
      "value": "0xE6D"
    },
    "3685": {
      "op": "JUMPI"
    },
    "3686": {
      "op": "PUSH2",
      "value": "0xE6D"
    },
    "3689": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3692": {
      "jump": "i",
      "op": "JUMP"
    },
    "3693": {
      "op": "JUMPDEST"
    },
    "3694": {
      "op": "POP"
    },
    "3695": {
      "op": "MUL"
    },
    "3696": {
      "op": "SWAP1"
    },
    "3697": {
      "jump": "o",
      "op": "JUMP"
    },
    "3698": {
      "op": "JUMPDEST"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3701": {
      "op": "DUP3"
    },
    "3702": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3705": {
      "op": "JUMPI"
    },
    "3706": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3716": {
      "op": "MSTORE"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3726": {
      "op": "REVERT"
    },
    "3727": {
      "op": "JUMPDEST"
    },
    "3728": {
      "op": "POP"
    },
    "3729": {
      "op": "DIV"
    },
    "3730": {
      "op": "SWAP1"
    },
    "3731": {
      "jump": "o",
      "op": "JUMP"
    },
    "3732": {
      "op": "JUMPDEST"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3735": {
      "op": "DUP3"
    },
    "3736": {
      "op": "DUP3"
    },
    "3737": {
      "op": "LT"
    },
    "3738": {
      "op": "ISZERO"
    },
    "3739": {
      "op": "PUSH2",
      "value": "0xEA6"
    },
    "3742": {
      "op": "JUMPI"
    },
    "3743": {
      "op": "PUSH2",
      "value": "0xEA6"
    },
    "3746": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3749": {
      "jump": "i",
      "op": "JUMP"
    },
    "3750": {
      "op": "JUMPDEST"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "op": "SUB"
    },
    "3753": {
      "op": "SWAP1"
    },
    "3754": {
      "jump": "o",
      "op": "JUMP"
    },
    "3755": {
      "op": "JUMPDEST"
    },
    "3756": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3763": {
      "op": "SHL"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3766": {
      "op": "MSTORE"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3771": {
      "op": "MSTORE"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3776": {
      "op": "REVERT"
    },
    "3777": {
      "op": "JUMPDEST"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3782": {
      "op": "NOT"
    },
    "3783": {
      "op": "DUP3"
    },
    "3784": {
      "op": "EQ"
    },
    "3785": {
      "op": "ISZERO"
    },
    "3786": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "3789": {
      "op": "JUMPI"
    },
    "3790": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "3793": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3796": {
      "jump": "i",
      "op": "JUMP"
    },
    "3797": {
      "op": "JUMPDEST"
    },
    "3798": {
      "op": "POP"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "ADD"
    },
    "3802": {
      "op": "SWAP1"
    },
    "3803": {
      "jump": "o",
      "op": "JUMP"
    },
    "3804": {
      "op": "JUMPDEST"
    },
    "3805": {
      "op": "DUP1"
    },
    "3806": {
      "op": "MLOAD"
    },
    "3807": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3818": {
      "op": "DUP2"
    },
    "3819": {
      "op": "AND"
    },
    "3820": {
      "op": "DUP2"
    },
    "3821": {
      "op": "EQ"
    },
    "3822": {
      "op": "PUSH2",
      "value": "0xC48"
    },
    "3825": {
      "op": "JUMPI"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3828": {
      "op": "DUP1"
    },
    "3829": {
      "op": "REVERT"
    },
    "3830": {
      "op": "JUMPDEST"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3833": {
      "op": "DUP1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3836": {
      "op": "DUP1"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3841": {
      "op": "DUP7"
    },
    "3842": {
      "op": "DUP9"
    },
    "3843": {
      "op": "SUB"
    },
    "3844": {
      "op": "SLT"
    },
    "3845": {
      "op": "ISZERO"
    },
    "3846": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3849": {
      "op": "JUMPI"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3852": {
      "op": "DUP1"
    },
    "3853": {
      "op": "REVERT"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xF17"
    },
    "3858": {
      "op": "DUP7"
    },
    "3859": {
      "op": "PUSH2",
      "value": "0xEDC"
    },
    "3862": {
      "jump": "i",
      "op": "JUMP"
    },
    "3863": {
      "op": "JUMPDEST"
    },
    "3864": {
      "op": "SWAP5"
    },
    "3865": {
      "op": "POP"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3868": {
      "op": "DUP7"
    },
    "3869": {
      "op": "ADD"
    },
    "3870": {
      "op": "MLOAD"
    },
    "3871": {
      "op": "SWAP4"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3875": {
      "op": "DUP7"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "MLOAD"
    },
    "3878": {
      "op": "SWAP3"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3882": {
      "op": "DUP7"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "op": "MLOAD"
    },
    "3885": {
      "op": "SWAP2"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "PUSH2",
      "value": "0xF3A"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3892": {
      "op": "DUP8"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "PUSH2",
      "value": "0xEDC"
    },
    "3897": {
      "jump": "i",
      "op": "JUMP"
    },
    "3898": {
      "op": "JUMPDEST"
    },
    "3899": {
      "op": "SWAP1"
    },
    "3900": {
      "op": "POP"
    },
    "3901": {
      "op": "SWAP3"
    },
    "3902": {
      "op": "SWAP6"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "SWAP3"
    },
    "3905": {
      "op": "SWAP6"
    },
    "3906": {
      "op": "SWAP1"
    },
    "3907": {
      "op": "SWAP4"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "jump": "o",
      "op": "JUMP"
    },
    "3910": {
      "op": "JUMPDEST"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3915": {
      "op": "DUP3"
    },
    "3916": {
      "op": "DUP5"
    },
    "3917": {
      "op": "SUB"
    },
    "3918": {
      "op": "SLT"
    },
    "3919": {
      "op": "ISZERO"
    },
    "3920": {
      "op": "PUSH2",
      "value": "0xF58"
    },
    "3923": {
      "op": "JUMPI"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3926": {
      "op": "DUP1"
    },
    "3927": {
      "op": "REVERT"
    },
    "3928": {
      "op": "JUMPDEST"
    },
    "3929": {
      "op": "DUP2"
    },
    "3930": {
      "op": "MLOAD"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3933": {
      "op": "DUP2"
    },
    "3934": {
      "op": "AND"
    },
    "3935": {
      "op": "DUP2"
    },
    "3936": {
      "op": "EQ"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0xC94"
    },
    "3940": {
      "op": "JUMPI"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3943": {
      "op": "DUP1"
    },
    "3944": {
      "op": "REVERT"
    }
  },
  "sha1": "192b546683660dab174b55fa04a6195aefdc0ec5",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n/* Should be able to do:\n\n1. Stake tokens\n2. Unstake tokens\n3. Issue reward tokens to users\n4. Add allowed tokens\n5. Get ETH value of tokens\n*/\ncontract TokenFarm is Ownable {\n    // List of allowed tokens.\n    address[] public allowedTokens;\n    // List of stakers in platform (also needed cause you can't loop through a map)\n    address[] public stakers;\n    // Mapping allowed token's address -> staker's address -> amount staked\n    mapping(address => mapping(address => uint256)) public stakingBalance;\n    // Mapping to keep track of how many unique tokens the user has staked.\n    mapping(address => uint256) public uniqueTokensStaked;\n    // Mapping for unique tokens to their Chainlink price feeds.\n    mapping(address => address) public tokenPriceFeedMapping;\n    IERC20 public dappToken;\n\n    constructor(address _dappTokenAddress) public {\n        // DAPP token we defined.\n        dappToken = IERC20(_dappTokenAddress);\n    }\n\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeedMapping[_token] = _priceFeed;\n    }\n\n    /** Function 1 - Stakes tokens sent in by users.\n        _amount - amount of tokens to stake\n        _token - the address of the ERC-20 token being staked\n     */\n    function stakeTokens(uint256 _amount, address _token) public {\n        require(_amount > 0, \"Amount must be more than 0\");\n        require(tokenIsAllowed(_token), \"Token is currently not allowed\");\n\n        // We need the contract for the token (or an interface defined), or we can use OpenZeppelin's IERC20.sol\n        // We transfer the tokens from the sender to this contract's address.\n        // Using transferFrom() instead of transfer(), the former is from user to user, the latter is from the contract that owns the token.\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n        updateUniqueTokensStaked(msg.sender, _token);\n        stakingBalance[_token][msg.sender] =\n            stakingBalance[_token][msg.sender] +\n            _amount;\n\n        // Check if the amount of unique tokens is 1, if so it's the first token for this user\n        // So update the stakers list.\n        if (uniqueTokensStaked[msg.sender] == 1) {\n            stakers.push(msg.sender);\n        }\n    }\n\n    /** Util function to update how many unique tokens a user is staking.\n        _user - the address of the user staking\n        _token - the address of the token being staked\n    */\n    function updateUniqueTokensStaked(address _user, address _token) internal {\n        if (stakingBalance[_token][_user] <= 0) {\n            uniqueTokensStaked[_user] = uniqueTokensStaked[_user] + 1;\n        }\n    }\n\n    /** Function 2 - Unstakes tokens sent in by users.\n        _token - the address of the ERC-20 token being staked\n     */\n    function unstakeTokens(address _token) public {\n        uint256 balance = stakingBalance[_token][msg.sender];\n        require(balance > 0, \"Staking balance cannot be 0.\");\n        IERC20(_token).transfer(msg.sender, balance);\n        stakingBalance[_token][msg.sender] = 0;\n        // Counters Re-entrancy attack?\n        uniqueTokensStaked[msg.sender] = uniqueTokensStaked[msg.sender] - 1;\n    }\n\n    /** Function 3 - Issues tokens to all stakers based on the value of tokens staked.\n     */\n    function issueTokens() public onlyOwner {\n        for (uint256 i = 0; i < stakers.length; i++) {\n            address recipient = stakers[i];\n            // Send them a DAPP token reward based on total value staked.\n            uint256 userTotalValue = getUserTotalValue(recipient);\n            // Here we can use transfer() instead of transferFrom() since this contract holds the DAPP tokens.\n            dappToken.transfer(recipient, userTotalValue);\n        }\n    }\n\n    /** Util function that grabs the value of all unique tokens the user has staked.\n        _user - the address of the user staking\n        _token - the address of the token being staked\n    */\n    function getUserTotalValue(address _user) public view returns (uint256) {\n        uint256 totalValue = 0;\n        require(uniqueTokensStaked[_user] > 0, \"No tokens staked!\");\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            totalValue =\n                totalValue +\n                getUserSingleTokenValue(_user, allowedTokens[i]);\n        }\n        return totalValue;\n    }\n\n    /** Util function that grabs the value of one unique token the user has staked.\n        _user - the address of the user staking\n        _token - the address of the token being staked\n    */\n    function getUserSingleTokenValue(address _user, address _token)\n        public\n        view\n        returns (uint256)\n    {\n        if (uniqueTokensStaked[_user] <= 0) {\n            return 0;\n        }\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n        // Price of token * stakingBalance[_token][_user]\n        // 10 ETH, ETH-->USD=100, 10 * 100 = 1000\n        return ((stakingBalance[_token][_user] * price) / (10**decimals));\n    }\n\n    /** Util function that grabs the value of one unique token from Chainlink.\n        _token - the address of the token being staked\n    */\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        // Price feed address\n        address priceFeedAddress = tokenPriceFeedMapping[_token];\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint8 decimals = priceFeed.decimals();\n\n        return (uint256(price), uint256(decimals));\n    }\n\n    /** Util function that only the owner can use. onlyOwner is from OpenZeppelin's Ownable.sol contract.\n        _token - the address of the ERC-20 token being staked \n    */\n    function addAllowedTokens(address _token) public onlyOwner {\n        allowedTokens.push(_token);\n    }\n\n    /** Function 4 - Checks if token is allowed to be staked.\n        _token - the address of the ERC-20 token being staked\n        return: Whether or not that token is allowed to be staked in this Dapp.\n     */\n    function tokenIsAllowed(address _token) public returns (bool) {\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (allowedTokens[i] == _token) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n",
  "sourceMap": "389:6280:4:-:0;;;1049:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:2;867:9:0;:23::i;:::-;1139:9:4;:37;;-1:-1:-1;;;;;;1139:37:4;-1:-1:-1;;;;;1139:37:4;;;;;;;;;;389:6280;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;389:6280:4;;;;;;",
  "sourcePath": "contracts/TokenFarm.sol",
  "type": "contract"
}